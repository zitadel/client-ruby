name: Pipeline

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: write
  actions: read
  checks: write
  pull-requests: write
  packages: write

jobs:
  lint-commits:
    name: Run Commitlint Checks
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/commitlint.yml
    with:
      ref: ${{ github.event.pull_request.head.sha }}
    secrets: inherit

  code-style:
    name: Run Linter Formatter
    uses: ./.github/workflows/linting.yml
    with:
      ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.ref }}
      commit_changes: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    secrets: inherit

  compat-check:
    name: Run Compatibility Checks
    uses: ./.github/workflows/integration.yml
    with:
      library_ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.ref }}
      sanity_ref: main
    secrets: inherit

  type-check:
    name: Run Type Checks
    uses: ./.github/workflows/typecheck.yml
    with:
      ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.ref }}
    secrets: inherit

  run-tests:
    name: Run Test Suite
    uses: ./.github/workflows/test.yml
    with:
      ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.ref }}
    secrets: inherit

  code-inspection:
    name: Run Qodana Inspections
    needs: run-tests
    uses: ./.github/workflows/qodana.yml
    if: ${{ always() }}
    with:
      ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.ref }}
    secrets: inherit

  build-docker:
    name: Build Docker Container
    needs: run-tests
    uses: ./.github/workflows/docker.yml
    with:
      ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.ref }}
    secrets: inherit

  all-passed:
    name: Check Build Status
    runs-on: ubuntu-latest
    needs:
      # - lint-commits # Uncomment if commit linting should block release
      - code-style
      - compat-check
      - type-check
      - run-tests
      - code-inspection
      - build-docker
    if: ${{ success() }}
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Report Success
        run: echo "All required checks passed successfully."

  release-package:
    name: Do Release Artifact
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - all-passed
    uses: ./.github/workflows/release.yml
    secrets: inherit
