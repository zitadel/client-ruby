=begin
# API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for ZitadelClient::SessionServiceApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SessionServiceApi' do
  before do
    # run before each test
    @api_instance = ZitadelClient::SessionServiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SessionServiceApi' do
    it 'should create an instance of SessionServiceApi' do
      expect(@api_instance).to be_instance_of(ZitadelClient::SessionServiceApi)
    end
  end

  # unit tests for create_session
  # Create a new session
  # Create a new session. A token will be returned, which is required for further updates of the session.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [V2CreateSessionResponse]
  describe 'create_session test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_session
  # Terminate an existing session
  # Terminate your own session or if granted any other session.
  # @param session_id \&quot;id of the session to terminate\&quot;
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [V2DeleteSessionResponse]
  describe 'delete_session test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_session
  # Get a session
  # Get a session and all its information like the time of the user or password verification
  # @param session_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :session_token 
  # @return [V2GetSessionResponse]
  describe 'get_session test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_sessions
  # Search sessions
  # Search for sessions
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [V2ListSessionsResponse]
  describe 'list_sessions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for set_session
  # Update an existing session
  # Update an existing session with new information.
  # @param session_id \&quot;id of the session to update\&quot;
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [V2SetSessionResponse]
  describe 'set_session test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
