=begin
# API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for ZitadelClient::SettingsServiceApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SettingsServiceApi' do
  before do
    # run before each test
    @api_instance = ZitadelClient::SettingsServiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SettingsServiceApi' do
    it 'should create an instance of SettingsServiceApi' do
      expect(@api_instance).to be_instance_of(ZitadelClient::SettingsServiceApi)
    end
  end

  # unit tests for get_active_identity_providers
  # Get the current active identity providers
  # Return the current active identity providers for the requested context
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ctx_org_id 
  # @option opts [Boolean] :ctx_instance 
  # @option opts [Boolean] :creation_allowed 
  # @option opts [Boolean] :linking_allowed 
  # @option opts [Boolean] :auto_creation 
  # @option opts [Boolean] :auto_linking 
  # @return [V2GetActiveIdentityProvidersResponse]
  describe 'get_active_identity_providers test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_branding_settings
  # Get the current active branding settings
  # Return the current active branding settings for the requested context
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ctx_org_id 
  # @option opts [Boolean] :ctx_instance 
  # @return [V2GetBrandingSettingsResponse]
  describe 'get_branding_settings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_domain_settings
  # Get the domain settings
  # Return the domain settings for the requested context
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ctx_org_id 
  # @option opts [Boolean] :ctx_instance 
  # @return [V2GetDomainSettingsResponse]
  describe 'get_domain_settings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_general_settings
  # Get basic information over the instance
  # Return the basic information of the instance for the requested context
  # @param [Hash] opts the optional parameters
  # @return [V2GetGeneralSettingsResponse]
  describe 'get_general_settings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_legal_and_support_settings
  # Get the legal and support settings
  # Return the legal settings for the requested context
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ctx_org_id 
  # @option opts [Boolean] :ctx_instance 
  # @return [V2GetLegalAndSupportSettingsResponse]
  describe 'get_legal_and_support_settings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_lockout_settings
  # Get the lockout settings
  # Return the lockout settings for the requested context, which define when a user will be locked
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ctx_org_id 
  # @option opts [Boolean] :ctx_instance 
  # @return [V2GetLockoutSettingsResponse]
  describe 'get_lockout_settings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_login_settings
  # Get the login settings
  # Return the settings for the requested context
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ctx_org_id 
  # @option opts [Boolean] :ctx_instance 
  # @return [V2GetLoginSettingsResponse]
  describe 'get_login_settings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_password_complexity_settings
  # Get the password complexity settings
  # Return the password complexity settings for the requested context
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ctx_org_id 
  # @option opts [Boolean] :ctx_instance 
  # @return [V2GetPasswordComplexitySettingsResponse]
  describe 'get_password_complexity_settings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_password_expiry_settings
  # Get the password expiry settings
  # Return the password expiry settings for the requested context
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ctx_org_id 
  # @option opts [Boolean] :ctx_instance 
  # @return [V2GetPasswordExpirySettingsResponse]
  describe 'get_password_expiry_settings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
