=begin
#Zitadel SDK

#The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.13.0

=end

require 'date'
require 'time'

module Zitadel::Client::Models
        class NoOp200Response10
    attr_accessor :ee0f19ba_1ee5_4845_a65b_23096dd99978

    attr_accessor :_603d928b_926e_4ac7_9f35_b773b6f232d2

    attr_accessor :be0f0930_d65c_4c2f_8662_7d2d8243c44c

    attr_accessor :a67d933c_73d1_4398_b8a3_98ed3a4afe6d

    attr_accessor :a39776aa_adfd_4279_b069_6f6a500bf111

    attr_accessor :_6c00a71c_8e91_4a86_b1c9_9ad01b366f38

    attr_accessor :_730c75cc_adb6_4eed_aa15_8580738f2869

    attr_accessor :_07f28fe0_17a1_4118_8391_96c6697f2613

    attr_accessor :_40f84805_145d_4484_a2cd_0bc48bd91cdd

    attr_accessor :ccf9a7b1_b90d_4ec1_9dbe_ece70c0ecf33

    attr_accessor :c7b78ec7_191c_4a5f_8ff6_6c714273e267

    attr_accessor :_18093a5a_ca7a_42e5_a584_f773af1b636e

    attr_accessor :a031d622_501d_4300_94a7_1bb19132c55c

    attr_accessor :fc6c6a20_6f7d_4337_90aa_e594dab32702

    attr_accessor :_0e7dcf61_d72a_4451_a324_94e9a7ccdbd4

    attr_accessor :_3ce726db_f6d5_4b06_8585_aa1e3e44e010

    class EnumAttributeValidator
      attr_reader :datatype
      attr_reader :allowable_values

      def initialize(datatype, allowable_values)
        @allowable_values = allowable_values.map do |value|
          case datatype.to_s
          when /Integer/i
            value.to_i
          when /Float/i
            value.to_f
          else
            value
          end
        end
      end

      def valid?(value)
        !value || allowable_values.include?(value)
      end
    end

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'ee0f19ba_1ee5_4845_a65b_23096dd99978' => :'ee0f19ba-1ee5-4845-a65b-23096dd99978',
        :'_603d928b_926e_4ac7_9f35_b773b6f232d2' => :'603d928b-926e-4ac7-9f35-b773b6f232d2',
        :'be0f0930_d65c_4c2f_8662_7d2d8243c44c' => :'be0f0930-d65c-4c2f-8662-7d2d8243c44c',
        :'a67d933c_73d1_4398_b8a3_98ed3a4afe6d' => :'a67d933c-73d1-4398-b8a3-98ed3a4afe6d',
        :'a39776aa_adfd_4279_b069_6f6a500bf111' => :'a39776aa-adfd-4279-b069-6f6a500bf111',
        :'_6c00a71c_8e91_4a86_b1c9_9ad01b366f38' => :'6c00a71c-8e91-4a86-b1c9-9ad01b366f38',
        :'_730c75cc_adb6_4eed_aa15_8580738f2869' => :'730c75cc-adb6-4eed-aa15-8580738f2869',
        :'_07f28fe0_17a1_4118_8391_96c6697f2613' => :'07f28fe0-17a1-4118-8391-96c6697f2613',
        :'_40f84805_145d_4484_a2cd_0bc48bd91cdd' => :'40f84805-145d-4484-a2cd-0bc48bd91cdd',
        :'ccf9a7b1_b90d_4ec1_9dbe_ece70c0ecf33' => :'ccf9a7b1-b90d-4ec1-9dbe-ece70c0ecf33',
        :'c7b78ec7_191c_4a5f_8ff6_6c714273e267' => :'c7b78ec7-191c-4a5f-8ff6-6c714273e267',
        :'_18093a5a_ca7a_42e5_a584_f773af1b636e' => :'18093a5a-ca7a-42e5-a584-f773af1b636e',
        :'a031d622_501d_4300_94a7_1bb19132c55c' => :'a031d622-501d-4300-94a7-1bb19132c55c',
        :'fc6c6a20_6f7d_4337_90aa_e594dab32702' => :'fc6c6a20-6f7d-4337-90aa-e594dab32702',
        :'_0e7dcf61_d72a_4451_a324_94e9a7ccdbd4' => :'0e7dcf61-d72a-4451-a324-94e9a7ccdbd4',
        :'_3ce726db_f6d5_4b06_8585_aa1e3e44e010' => :'3ce726db-f6d5-4b06-8585-aa1e3e44e010'
      }
    end

    # Returns attribute mapping this model knows about
    def self.acceptable_attribute_map
      attribute_map
    end

    # Returns all the JSON keys this model knows about
    def self.acceptable_attributes
      acceptable_attribute_map.values
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'ee0f19ba_1ee5_4845_a65b_23096dd99978' => :'BetaAppServiceAPIConfig',
        :'_603d928b_926e_4ac7_9f35_b773b6f232d2' => :'BetaAppServiceAppState',
        :'be0f0930_d65c_4c2f_8662_7d2d8243c44c' => :'BetaAppServiceApplicationNameQuery',
        :'a67d933c_73d1_4398_b8a3_98ed3a4afe6d' => :'BetaAppServiceCreateAPIApplicationRequest',
        :'a39776aa_adfd_4279_b069_6f6a500bf111' => :'BetaAppServiceCreateAPIApplicationResponse',
        :'_6c00a71c_8e91_4a86_b1c9_9ad01b366f38' => :'BetaAppServiceCreateOIDCApplicationRequest',
        :'_730c75cc_adb6_4eed_aa15_8580738f2869' => :'BetaAppServiceCreateOIDCApplicationResponse',
        :'_07f28fe0_17a1_4118_8391_96c6697f2613' => :'BetaAppServiceCreateSAMLApplicationRequest',
        :'_40f84805_145d_4484_a2cd_0bc48bd91cdd' => :'Object',
        :'ccf9a7b1_b90d_4ec1_9dbe_ece70c0ecf33' => :'Object',
        :'c7b78ec7_191c_4a5f_8ff6_6c714273e267' => :'BetaAppServiceLoginV2',
        :'_18093a5a_ca7a_42e5_a584_f773af1b636e' => :'BetaAppServiceOIDCConfig',
        :'a031d622_501d_4300_94a7_1bb19132c55c' => :'BetaAppServiceSAMLConfig',
        :'fc6c6a20_6f7d_4337_90aa_e594dab32702' => :'BetaAppServiceUpdateAPIApplicationConfigurationRequest',
        :'_0e7dcf61_d72a_4451_a324_94e9a7ccdbd4' => :'BetaAppServiceUpdateOIDCApplicationConfigurationRequest',
        :'_3ce726db_f6d5_4b06_8585_aa1e3e44e010' => :'BetaAppServiceUpdateSAMLApplicationConfigurationRequest'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
      ])
    end

    # Initializes the object
    # @param [Hash] attributes Models attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        # MODIFIED: Updated class name in error message
        fail ArgumentError, "The input argument (attributes) must be a hash in `Zitadel::Client::Models::NoOp200Response10` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      acceptable_attribute_map = self.class.acceptable_attribute_map
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!acceptable_attribute_map.key?(k.to_sym))
          # MODIFIED: Updated class name in error message
          fail ArgumentError, "`#{k}` is not a valid attribute in `Zitadel::Client::Models::NoOp200Response10`. Please check the name to make sure it's valid. List of attributes: " + acceptable_attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'ee0f19ba_1ee5_4845_a65b_23096dd99978')
        self.ee0f19ba_1ee5_4845_a65b_23096dd99978 = attributes[:'ee0f19ba_1ee5_4845_a65b_23096dd99978']
      end

      if attributes.key?(:'_603d928b_926e_4ac7_9f35_b773b6f232d2')
        self._603d928b_926e_4ac7_9f35_b773b6f232d2 = attributes[:'_603d928b_926e_4ac7_9f35_b773b6f232d2']
      end

      if attributes.key?(:'be0f0930_d65c_4c2f_8662_7d2d8243c44c')
        self.be0f0930_d65c_4c2f_8662_7d2d8243c44c = attributes[:'be0f0930_d65c_4c2f_8662_7d2d8243c44c']
      end

      if attributes.key?(:'a67d933c_73d1_4398_b8a3_98ed3a4afe6d')
        self.a67d933c_73d1_4398_b8a3_98ed3a4afe6d = attributes[:'a67d933c_73d1_4398_b8a3_98ed3a4afe6d']
      end

      if attributes.key?(:'a39776aa_adfd_4279_b069_6f6a500bf111')
        self.a39776aa_adfd_4279_b069_6f6a500bf111 = attributes[:'a39776aa_adfd_4279_b069_6f6a500bf111']
      end

      if attributes.key?(:'_6c00a71c_8e91_4a86_b1c9_9ad01b366f38')
        self._6c00a71c_8e91_4a86_b1c9_9ad01b366f38 = attributes[:'_6c00a71c_8e91_4a86_b1c9_9ad01b366f38']
      end

      if attributes.key?(:'_730c75cc_adb6_4eed_aa15_8580738f2869')
        self._730c75cc_adb6_4eed_aa15_8580738f2869 = attributes[:'_730c75cc_adb6_4eed_aa15_8580738f2869']
      end

      if attributes.key?(:'_07f28fe0_17a1_4118_8391_96c6697f2613')
        self._07f28fe0_17a1_4118_8391_96c6697f2613 = attributes[:'_07f28fe0_17a1_4118_8391_96c6697f2613']
      end

      if attributes.key?(:'_40f84805_145d_4484_a2cd_0bc48bd91cdd')
        self._40f84805_145d_4484_a2cd_0bc48bd91cdd = attributes[:'_40f84805_145d_4484_a2cd_0bc48bd91cdd']
      end

      if attributes.key?(:'ccf9a7b1_b90d_4ec1_9dbe_ece70c0ecf33')
        self.ccf9a7b1_b90d_4ec1_9dbe_ece70c0ecf33 = attributes[:'ccf9a7b1_b90d_4ec1_9dbe_ece70c0ecf33']
      end

      if attributes.key?(:'c7b78ec7_191c_4a5f_8ff6_6c714273e267')
        self.c7b78ec7_191c_4a5f_8ff6_6c714273e267 = attributes[:'c7b78ec7_191c_4a5f_8ff6_6c714273e267']
      end

      if attributes.key?(:'_18093a5a_ca7a_42e5_a584_f773af1b636e')
        self._18093a5a_ca7a_42e5_a584_f773af1b636e = attributes[:'_18093a5a_ca7a_42e5_a584_f773af1b636e']
      end

      if attributes.key?(:'a031d622_501d_4300_94a7_1bb19132c55c')
        self.a031d622_501d_4300_94a7_1bb19132c55c = attributes[:'a031d622_501d_4300_94a7_1bb19132c55c']
      end

      if attributes.key?(:'fc6c6a20_6f7d_4337_90aa_e594dab32702')
        self.fc6c6a20_6f7d_4337_90aa_e594dab32702 = attributes[:'fc6c6a20_6f7d_4337_90aa_e594dab32702']
      end

      if attributes.key?(:'_0e7dcf61_d72a_4451_a324_94e9a7ccdbd4')
        self._0e7dcf61_d72a_4451_a324_94e9a7ccdbd4 = attributes[:'_0e7dcf61_d72a_4451_a324_94e9a7ccdbd4']
      end

      if attributes.key?(:'_3ce726db_f6d5_4b06_8585_aa1e3e44e010')
        self._3ce726db_f6d5_4b06_8585_aa1e3e44e010 = attributes[:'_3ce726db_f6d5_4b06_8585_aa1e3e44e010']
      end
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          ee0f19ba_1ee5_4845_a65b_23096dd99978 == o.ee0f19ba_1ee5_4845_a65b_23096dd99978 &&
          _603d928b_926e_4ac7_9f35_b773b6f232d2 == o._603d928b_926e_4ac7_9f35_b773b6f232d2 &&
          be0f0930_d65c_4c2f_8662_7d2d8243c44c == o.be0f0930_d65c_4c2f_8662_7d2d8243c44c &&
          a67d933c_73d1_4398_b8a3_98ed3a4afe6d == o.a67d933c_73d1_4398_b8a3_98ed3a4afe6d &&
          a39776aa_adfd_4279_b069_6f6a500bf111 == o.a39776aa_adfd_4279_b069_6f6a500bf111 &&
          _6c00a71c_8e91_4a86_b1c9_9ad01b366f38 == o._6c00a71c_8e91_4a86_b1c9_9ad01b366f38 &&
          _730c75cc_adb6_4eed_aa15_8580738f2869 == o._730c75cc_adb6_4eed_aa15_8580738f2869 &&
          _07f28fe0_17a1_4118_8391_96c6697f2613 == o._07f28fe0_17a1_4118_8391_96c6697f2613 &&
          _40f84805_145d_4484_a2cd_0bc48bd91cdd == o._40f84805_145d_4484_a2cd_0bc48bd91cdd &&
          ccf9a7b1_b90d_4ec1_9dbe_ece70c0ecf33 == o.ccf9a7b1_b90d_4ec1_9dbe_ece70c0ecf33 &&
          c7b78ec7_191c_4a5f_8ff6_6c714273e267 == o.c7b78ec7_191c_4a5f_8ff6_6c714273e267 &&
          _18093a5a_ca7a_42e5_a584_f773af1b636e == o._18093a5a_ca7a_42e5_a584_f773af1b636e &&
          a031d622_501d_4300_94a7_1bb19132c55c == o.a031d622_501d_4300_94a7_1bb19132c55c &&
          fc6c6a20_6f7d_4337_90aa_e594dab32702 == o.fc6c6a20_6f7d_4337_90aa_e594dab32702 &&
          _0e7dcf61_d72a_4451_a324_94e9a7ccdbd4 == o._0e7dcf61_d72a_4451_a324_94e9a7ccdbd4 &&
          _3ce726db_f6d5_4b06_8585_aa1e3e44e010 == o._3ce726db_f6d5_4b06_8585_aa1e3e44e010
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [ee0f19ba_1ee5_4845_a65b_23096dd99978, _603d928b_926e_4ac7_9f35_b773b6f232d2, be0f0930_d65c_4c2f_8662_7d2d8243c44c, a67d933c_73d1_4398_b8a3_98ed3a4afe6d, a39776aa_adfd_4279_b069_6f6a500bf111, _6c00a71c_8e91_4a86_b1c9_9ad01b366f38, _730c75cc_adb6_4eed_aa15_8580738f2869, _07f28fe0_17a1_4118_8391_96c6697f2613, _40f84805_145d_4484_a2cd_0bc48bd91cdd, ccf9a7b1_b90d_4ec1_9dbe_ece70c0ecf33, c7b78ec7_191c_4a5f_8ff6_6c714273e267, _18093a5a_ca7a_42e5_a584_f773af1b636e, a031d622_501d_4300_94a7_1bb19132c55c, fc6c6a20_6f7d_4337_90aa_e594dab32702, _0e7dcf61_d72a_4451_a324_94e9a7ccdbd4, _3ce726db_f6d5_4b06_8585_aa1e3e44e010].hash
    end

# Builds the object from hash
# @param [Hash] attributes Models attributes in the form of hash
# @return [Object] Returns the model itself
def self.build_from_hash(attributes)
  return nil unless attributes.is_a?(Hash)
  attributes = attributes.transform_keys(&:to_sym)
  transformed_hash = {}
  openapi_types.each_pair do |key, type|
    if attributes.key?(attribute_map[key]) && attributes[attribute_map[key]].nil?
      transformed_hash["#{key}"] = nil
    elsif type =~ /\AArray<(.*)>/i
      # check to ensure the input is an array given that the attribute
      # is documented as an array but the input is not
      if attributes[attribute_map[key]].is_a?(Array)
        transformed_hash["#{key}"] = attributes[attribute_map[key]].map { |v| _deserialize($1, v) }
      end
    elsif !attributes[attribute_map[key]].nil?
      transformed_hash["#{key}"] = _deserialize(type, attributes[attribute_map[key]])
    end
  end
  new(transformed_hash) # `new` will call the initialize method of the specific model class.
end

# Deserializes the data based on type
# @param string type Data type
# @param string value Value to be deserialized
# @return [Object] Deserialized data
def self._deserialize(type, value)
  case type.to_sym
  when :Time
    Time.parse(value)
  when :Date
    Date.parse(value)
  when :String
    value.to_s
  when :Integer
    value.to_i
  when :Float
    value.to_f
  when :Boolean
    if value.to_s =~ /\A(true|t|yes|y|1)\z/i
      true
    else
      false
    end
  when :Object
    # generic object (usually a Hash), return directly
    value
  when /\AArray<(?<inner_type>.+)>\z/
    inner_type = Regexp.last_match[:inner_type]
    value.map { |v| _deserialize(inner_type, v) }
  when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
    k_type = Regexp.last_match[:k_type]
    v_type = Regexp.last_match[:v_type]
    {}.tap do |hash|
      value.each do |k, v|
        hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
      end
    end
  else # model
    # models (e.g. Pet) or oneOf/anyOf constructs that resolve to a model name
    # MODIFIED: Ensure model is looked up in the Models namespace
    # 'type' here is expected to be the simple class name (e.g., "User", "OrderDetails")
    klass = Zitadel::Client::Models.const_get(type)
    # The `klass.build` method is for oneOf/anyOf types (defined in partial_oneof_module.mustache / partial_anyof_module.mustache)
    # The `klass.build_from_hash` is for regular model types (defined in this base_object.mustache itself)
    if klass.respond_to?(:openapi_one_of) || klass.respond_to?(:openapi_any_of) || klass.respond_to?(:openapi_allOf)
      klass.build(value) # For oneOf/anyOf/allOf, delegate to their specific build method
    else
      klass.build_from_hash(value) # For regular models
    end
  end
end

# Returns the string representation of the object
# @return [String] String presentation of the object
def to_s
  to_hash.to_s
end

# to_body is an alias to to_hash (backward compatibility)
# @return [Hash] Returns the object in the form of hash
def to_body
  to_hash
end

# Returns the object in the form of hash
# @return [Hash] Returns the object in the form of hash
def to_hash
  hash = {} # Calls super.to_hash if parent exists
  self.class.attribute_map.each_pair do |attr, param|
    value = self.send(attr)
    if value.nil?
      is_nullable = self.class.openapi_nullable.include?(attr)
      next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
    end

    hash[param] = _to_hash(value)
  end
  hash
end

# Outputs non-array value in the form of hash
# For object, use to_hash. Otherwise, just return the value
# @param [Object] value Any valid value
# @return [Hash] Returns the value in the form of hash
def _to_hash(value)
  if value.is_a?(Array)
    value.compact.map { |v| _to_hash(v) }
  elsif value.is_a?(Hash)
    {}.tap do |hash|
      value.each { |k, v| hash[k] = _to_hash(v) }
    end
  elsif value.respond_to? :to_hash
    value.to_hash
  else
    value
  end
end

  end

end
