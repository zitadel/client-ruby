=begin
#Zitadel SDK

#The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.13.0

=end

require 'date'
require 'time'

module Zitadel::Client::Models
        class NoOp200Response6
    attr_accessor :f01d54bd_9bd5_4bc2_8944_56f7ae59b9a3

    attr_accessor :_84bb1e74_96e0_484c_8ac7_cc660ea027d2

    attr_accessor :_5557a7ea_8f72_47f3_a27f_c211e2c53a16

    attr_accessor :ff7023b8_f593_4124_99a2_e681063b95e8

    attr_accessor :_39aff72f_c292_434e_98b8_d302f0729cfd

    attr_accessor :_56ee0472_f6e3_4167_8e50_b419a3078b45

    attr_accessor :a8ff5de7_cc2b_434d_a4bd_e071b806e59f

    attr_accessor :_26755ba5_bbbb_4246_98b8_5fba9ad87f18

    attr_accessor :_9c9999ad_e912_4456_bdb9_4bf8eda0e035

    attr_accessor :fa4cfdd4_3d60_471f_961f_cf25500d6a04

    attr_accessor :_57c07a9e_e08f_4909_83ae_e12ac2d46abb

    attr_accessor :_1815af71_fb11_4b79_8be2_b61e76379bdc

    attr_accessor :_7d23d5bd_d66e_4458_a41a_f1177b1f7ceb

    attr_accessor :a31c35e3_8d5b_43af_98b4_0b6c6443a14a

    attr_accessor :cf4468e4_0ffe_47d6_a02e_b9ca2ed68df2

    attr_accessor :cbcfbce0_8f24_4096_bd55_bb7ea65cd772

    attr_accessor :c9012cc2_f4a0_40a6_814e_19505b6d0952

    attr_accessor :b2be78ce_2f44_497e_8f8d_3631d229fd02

    attr_accessor :_222c80e1_fe9e_4168_a8ef_1f14752aefec

    attr_accessor :_8772e234_042f_4dbb_8de8_7f5865ad7804

    attr_accessor :db201c97_c5a8_4544_a1a1_0fee3fdf2346

    attr_accessor :_2fe88a34_c9e5_4c40_a9ca_8cbe3ce3af0a

    attr_accessor :c87a81e2_bdd2_436b_b43f_423ff28cb8fe

    attr_accessor :c516918c_6df9_4768_a00f_d76a2ea4f23d

    attr_accessor :_32697a81_5283_405d_b7a7_f372c66f581f

    attr_accessor :_519ff08d_19b2_4454_8d43_218e3d366700

    attr_accessor :_92d8d4b6_8360_4907_abab_960a3b996e22

    attr_accessor :_29afe6d2_682f_4a24_9ab1_0da8bfc4cc40

    attr_accessor :_49c2492f_00fa_4e2f_94fb_5e204bf12925

    attr_accessor :_9e1acacb_0c7f_4c50_a689_a7c325b1d6a0

    attr_accessor :ec40c78a_66f6_4849_b6f0_f55c68b70bb5

    attr_accessor :f2d64cbf_2c56_4b12_910f_ad7f6a10a12d

    attr_accessor :d0931f74_c9a1_4341_97ee_0cbac22073a0

    attr_accessor :_55444cfe_6ab5_4f3b_b869_c96190cf4f38

    attr_accessor :d266ffba_0169_4541_b17e_69c28d932ffc

    attr_accessor :_6799411b_24a3_4ee4_bd8b_025c5270f223

    attr_accessor :_83775e7c_c993_4b76_bb02_1ba8a2f21a75

    attr_accessor :_32f8ba0f_b612_46f2_a8d6_c340cc11fd96

    attr_accessor :b40f4a3c_7ddc_4773_a176_6933aa006a85

    attr_accessor :d31783ea_e5a0_486b_98ab_86e85e3fc49d

    attr_accessor :_3a4dc160_5a3a_42c0_b211_f64149c6a6ad

    attr_accessor :_4a87f60d_1cda_4277_be7b_a35f63036860

    attr_accessor :e388e939_5f0d_439d_a2a4_fd81947d74f5

    attr_accessor :_9bd27983_6ecf_4f50_ad9e_dc84343eed73

    attr_accessor :ac6d6c45_6463_496f_be50_34a6b593197d

    attr_accessor :_8d00758d_ac09_46fd_b50c_f0fa61896aa3

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'f01d54bd_9bd5_4bc2_8944_56f7ae59b9a3' => :'f01d54bd-9bd5-4bc2-8944-56f7ae59b9a3',
        :'_84bb1e74_96e0_484c_8ac7_cc660ea027d2' => :'84bb1e74-96e0-484c-8ac7-cc660ea027d2',
        :'_5557a7ea_8f72_47f3_a27f_c211e2c53a16' => :'5557a7ea-8f72-47f3-a27f-c211e2c53a16',
        :'ff7023b8_f593_4124_99a2_e681063b95e8' => :'ff7023b8-f593-4124-99a2-e681063b95e8',
        :'_39aff72f_c292_434e_98b8_d302f0729cfd' => :'39aff72f-c292-434e-98b8-d302f0729cfd',
        :'_56ee0472_f6e3_4167_8e50_b419a3078b45' => :'56ee0472-f6e3-4167-8e50-b419a3078b45',
        :'a8ff5de7_cc2b_434d_a4bd_e071b806e59f' => :'a8ff5de7-cc2b-434d-a4bd-e071b806e59f',
        :'_26755ba5_bbbb_4246_98b8_5fba9ad87f18' => :'26755ba5-bbbb-4246-98b8-5fba9ad87f18',
        :'_9c9999ad_e912_4456_bdb9_4bf8eda0e035' => :'9c9999ad-e912-4456-bdb9-4bf8eda0e035',
        :'fa4cfdd4_3d60_471f_961f_cf25500d6a04' => :'fa4cfdd4-3d60-471f-961f-cf25500d6a04',
        :'_57c07a9e_e08f_4909_83ae_e12ac2d46abb' => :'57c07a9e-e08f-4909-83ae-e12ac2d46abb',
        :'_1815af71_fb11_4b79_8be2_b61e76379bdc' => :'1815af71-fb11-4b79-8be2-b61e76379bdc',
        :'_7d23d5bd_d66e_4458_a41a_f1177b1f7ceb' => :'7d23d5bd-d66e-4458-a41a-f1177b1f7ceb',
        :'a31c35e3_8d5b_43af_98b4_0b6c6443a14a' => :'a31c35e3-8d5b-43af-98b4-0b6c6443a14a',
        :'cf4468e4_0ffe_47d6_a02e_b9ca2ed68df2' => :'cf4468e4-0ffe-47d6-a02e-b9ca2ed68df2',
        :'cbcfbce0_8f24_4096_bd55_bb7ea65cd772' => :'cbcfbce0-8f24-4096-bd55-bb7ea65cd772',
        :'c9012cc2_f4a0_40a6_814e_19505b6d0952' => :'c9012cc2-f4a0-40a6-814e-19505b6d0952',
        :'b2be78ce_2f44_497e_8f8d_3631d229fd02' => :'b2be78ce-2f44-497e-8f8d-3631d229fd02',
        :'_222c80e1_fe9e_4168_a8ef_1f14752aefec' => :'222c80e1-fe9e-4168-a8ef-1f14752aefec',
        :'_8772e234_042f_4dbb_8de8_7f5865ad7804' => :'8772e234-042f-4dbb-8de8-7f5865ad7804',
        :'db201c97_c5a8_4544_a1a1_0fee3fdf2346' => :'db201c97-c5a8-4544-a1a1-0fee3fdf2346',
        :'_2fe88a34_c9e5_4c40_a9ca_8cbe3ce3af0a' => :'2fe88a34-c9e5-4c40-a9ca-8cbe3ce3af0a',
        :'c87a81e2_bdd2_436b_b43f_423ff28cb8fe' => :'c87a81e2-bdd2-436b-b43f-423ff28cb8fe',
        :'c516918c_6df9_4768_a00f_d76a2ea4f23d' => :'c516918c-6df9-4768-a00f-d76a2ea4f23d',
        :'_32697a81_5283_405d_b7a7_f372c66f581f' => :'32697a81-5283-405d-b7a7-f372c66f581f',
        :'_519ff08d_19b2_4454_8d43_218e3d366700' => :'519ff08d-19b2-4454-8d43-218e3d366700',
        :'_92d8d4b6_8360_4907_abab_960a3b996e22' => :'92d8d4b6-8360-4907-abab-960a3b996e22',
        :'_29afe6d2_682f_4a24_9ab1_0da8bfc4cc40' => :'29afe6d2-682f-4a24-9ab1-0da8bfc4cc40',
        :'_49c2492f_00fa_4e2f_94fb_5e204bf12925' => :'49c2492f-00fa-4e2f-94fb-5e204bf12925',
        :'_9e1acacb_0c7f_4c50_a689_a7c325b1d6a0' => :'9e1acacb-0c7f-4c50-a689-a7c325b1d6a0',
        :'ec40c78a_66f6_4849_b6f0_f55c68b70bb5' => :'ec40c78a-66f6-4849-b6f0-f55c68b70bb5',
        :'f2d64cbf_2c56_4b12_910f_ad7f6a10a12d' => :'f2d64cbf-2c56-4b12-910f-ad7f6a10a12d',
        :'d0931f74_c9a1_4341_97ee_0cbac22073a0' => :'d0931f74-c9a1-4341-97ee-0cbac22073a0',
        :'_55444cfe_6ab5_4f3b_b869_c96190cf4f38' => :'55444cfe-6ab5-4f3b-b869-c96190cf4f38',
        :'d266ffba_0169_4541_b17e_69c28d932ffc' => :'d266ffba-0169-4541-b17e-69c28d932ffc',
        :'_6799411b_24a3_4ee4_bd8b_025c5270f223' => :'6799411b-24a3-4ee4-bd8b-025c5270f223',
        :'_83775e7c_c993_4b76_bb02_1ba8a2f21a75' => :'83775e7c-c993-4b76-bb02-1ba8a2f21a75',
        :'_32f8ba0f_b612_46f2_a8d6_c340cc11fd96' => :'32f8ba0f-b612-46f2-a8d6-c340cc11fd96',
        :'b40f4a3c_7ddc_4773_a176_6933aa006a85' => :'b40f4a3c-7ddc-4773-a176-6933aa006a85',
        :'d31783ea_e5a0_486b_98ab_86e85e3fc49d' => :'d31783ea-e5a0-486b-98ab-86e85e3fc49d',
        :'_3a4dc160_5a3a_42c0_b211_f64149c6a6ad' => :'3a4dc160-5a3a-42c0-b211-f64149c6a6ad',
        :'_4a87f60d_1cda_4277_be7b_a35f63036860' => :'4a87f60d-1cda-4277-be7b-a35f63036860',
        :'e388e939_5f0d_439d_a2a4_fd81947d74f5' => :'e388e939-5f0d-439d-a2a4-fd81947d74f5',
        :'_9bd27983_6ecf_4f50_ad9e_dc84343eed73' => :'9bd27983-6ecf-4f50-ad9e-dc84343eed73',
        :'ac6d6c45_6463_496f_be50_34a6b593197d' => :'ac6d6c45-6463-496f-be50-34a6b593197d',
        :'_8d00758d_ac09_46fd_b50c_f0fa61896aa3' => :'8d00758d-ac09-46fd-b50c-f0fa61896aa3'
      }
    end

    # Returns attribute mapping this model knows about
    def self.acceptable_attribute_map
      attribute_map
    end

    # Returns all the JSON keys this model knows about
    def self.acceptable_attributes
      acceptable_attribute_map.values
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'f01d54bd_9bd5_4bc2_8944_56f7ae59b9a3' => :'UserServiceAndQuery',
        :'_84bb1e74_96e0_484c_8ac7_cc660ea027d2' => :'Object',
        :'_5557a7ea_8f72_47f3_a27f_c211e2c53a16' => :'Object',
        :'ff7023b8_f593_4124_99a2_e681063b95e8' => :'Object',
        :'_39aff72f_c292_434e_98b8_d302f0729cfd' => :'UserServiceAuthFactorU2F',
        :'_56ee0472_f6e3_4167_8e50_b419a3078b45' => :'UserServiceDisplayNameQuery',
        :'a8ff5de7_cc2b_434d_a4bd_e071b806e59f' => :'UserServiceEmailQuery',
        :'_26755ba5_bbbb_4246_98b8_5fba9ad87f18' => :'UserServiceFirstNameQuery',
        :'_9c9999ad_e912_4456_bdb9_4bf8eda0e035' => :'UserServiceFormData',
        :'fa4cfdd4_3d60_471f_961f_cf25500d6a04' => :'UserServiceHashedPassword',
        :'_57c07a9e_e08f_4909_83ae_e12ac2d46abb' => :'UserServiceHuman',
        :'_1815af71_fb11_4b79_8be2_b61e76379bdc' => :'UserServiceHumanUser',
        :'_7d23d5bd_d66e_4458_a41a_f1177b1f7ceb' => :'UserServiceIDFilter',
        :'a31c35e3_8d5b_43af_98b4_0b6c6443a14a' => :'UserServiceIDPIntent',
        :'cf4468e4_0ffe_47d6_a02e_b9ca2ed68df2' => :'UserServiceIDPLDAPAccessInformation',
        :'cbcfbce0_8f24_4096_bd55_bb7ea65cd772' => :'UserServiceIDPOAuthAccessInformation',
        :'c9012cc2_f4a0_40a6_814e_19505b6d0952' => :'UserServiceIDPSAMLAccessInformation',
        :'b2be78ce_2f44_497e_8f8d_3631d229fd02' => :'UserServiceInUserEmailsQuery',
        :'_222c80e1_fe9e_4168_a8ef_1f14752aefec' => :'UserServiceInUserIDQuery',
        :'_8772e234_042f_4dbb_8de8_7f5865ad7804' => :'UserServiceLDAPCredentials',
        :'db201c97_c5a8_4544_a1a1_0fee3fdf2346' => :'UserServiceLastNameQuery',
        :'_2fe88a34_c9e5_4c40_a9ca_8cbe3ce3af0a' => :'UserServiceLoginNameQuery',
        :'c87a81e2_bdd2_436b_b43f_423ff28cb8fe' => :'UserServiceMachine',
        :'c516918c_6df9_4768_a00f_d76a2ea4f23d' => :'UserServiceMachineUser',
        :'_32697a81_5283_405d_b7a7_f372c66f581f' => :'UserServiceMetadataKeyFilter',
        :'_519ff08d_19b2_4454_8d43_218e3d366700' => :'UserServiceNickNameQuery',
        :'_92d8d4b6_8360_4907_abab_960a3b996e22' => :'UserServiceNotQuery',
        :'_29afe6d2_682f_4a24_9ab1_0da8bfc4cc40' => :'UserServiceOrQuery',
        :'_49c2492f_00fa_4e2f_94fb_5e204bf12925' => :'UserServiceOrganizationIdQuery',
        :'_9e1acacb_0c7f_4c50_a689_a7c325b1d6a0' => :'UserServicePassword',
        :'ec40c78a_66f6_4849_b6f0_f55c68b70bb5' => :'UserServicePhoneQuery',
        :'f2d64cbf_2c56_4b12_910f_ad7f6a10a12d' => :'UserServiceRedirectURLs',
        :'d0931f74_c9a1_4341_97ee_0cbac22073a0' => :'Object',
        :'_55444cfe_6ab5_4f3b_b869_c96190cf4f38' => :'Object',
        :'d266ffba_0169_4541_b17e_69c28d932ffc' => :'Object',
        :'_6799411b_24a3_4ee4_bd8b_025c5270f223' => :'Object',
        :'_83775e7c_c993_4b76_bb02_1ba8a2f21a75' => :'Object',
        :'_32f8ba0f_b612_46f2_a8d6_c340cc11fd96' => :'UserServiceSendEmailVerificationCode',
        :'b40f4a3c_7ddc_4773_a176_6933aa006a85' => :'UserServiceSendInviteCode',
        :'d31783ea_e5a0_486b_98ab_86e85e3fc49d' => :'UserServiceSendPasskeyRegistrationLink',
        :'_3a4dc160_5a3a_42c0_b211_f64149c6a6ad' => :'UserServiceSendPasswordResetLink',
        :'_4a87f60d_1cda_4277_be7b_a35f63036860' => :'Object',
        :'e388e939_5f0d_439d_a2a4_fd81947d74f5' => :'UserServiceStateQuery',
        :'_9bd27983_6ecf_4f50_ad9e_dc84343eed73' => :'UserServiceTimestampFilter',
        :'ac6d6c45_6463_496f_be50_34a6b593197d' => :'UserServiceTypeQuery',
        :'_8d00758d_ac09_46fd_b50c_f0fa61896aa3' => :'UserServiceUserNameQuery'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
      ])
    end

    # Initializes the object
    # @param [Hash] attributes Models attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        # MODIFIED: Updated class name in error message
        fail ArgumentError, "The input argument (attributes) must be a hash in `Zitadel::Client::Models::NoOp200Response6` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      acceptable_attribute_map = self.class.acceptable_attribute_map
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!acceptable_attribute_map.key?(k.to_sym))
          # MODIFIED: Updated class name in error message
          fail ArgumentError, "`#{k}` is not a valid attribute in `Zitadel::Client::Models::NoOp200Response6`. Please check the name to make sure it's valid. List of attributes: " + acceptable_attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'f01d54bd_9bd5_4bc2_8944_56f7ae59b9a3')
        self.f01d54bd_9bd5_4bc2_8944_56f7ae59b9a3 = attributes[:'f01d54bd_9bd5_4bc2_8944_56f7ae59b9a3']
      end

      if attributes.key?(:'_84bb1e74_96e0_484c_8ac7_cc660ea027d2')
        self._84bb1e74_96e0_484c_8ac7_cc660ea027d2 = attributes[:'_84bb1e74_96e0_484c_8ac7_cc660ea027d2']
      end

      if attributes.key?(:'_5557a7ea_8f72_47f3_a27f_c211e2c53a16')
        self._5557a7ea_8f72_47f3_a27f_c211e2c53a16 = attributes[:'_5557a7ea_8f72_47f3_a27f_c211e2c53a16']
      end

      if attributes.key?(:'ff7023b8_f593_4124_99a2_e681063b95e8')
        self.ff7023b8_f593_4124_99a2_e681063b95e8 = attributes[:'ff7023b8_f593_4124_99a2_e681063b95e8']
      end

      if attributes.key?(:'_39aff72f_c292_434e_98b8_d302f0729cfd')
        self._39aff72f_c292_434e_98b8_d302f0729cfd = attributes[:'_39aff72f_c292_434e_98b8_d302f0729cfd']
      end

      if attributes.key?(:'_56ee0472_f6e3_4167_8e50_b419a3078b45')
        self._56ee0472_f6e3_4167_8e50_b419a3078b45 = attributes[:'_56ee0472_f6e3_4167_8e50_b419a3078b45']
      end

      if attributes.key?(:'a8ff5de7_cc2b_434d_a4bd_e071b806e59f')
        self.a8ff5de7_cc2b_434d_a4bd_e071b806e59f = attributes[:'a8ff5de7_cc2b_434d_a4bd_e071b806e59f']
      end

      if attributes.key?(:'_26755ba5_bbbb_4246_98b8_5fba9ad87f18')
        self._26755ba5_bbbb_4246_98b8_5fba9ad87f18 = attributes[:'_26755ba5_bbbb_4246_98b8_5fba9ad87f18']
      end

      if attributes.key?(:'_9c9999ad_e912_4456_bdb9_4bf8eda0e035')
        self._9c9999ad_e912_4456_bdb9_4bf8eda0e035 = attributes[:'_9c9999ad_e912_4456_bdb9_4bf8eda0e035']
      end

      if attributes.key?(:'fa4cfdd4_3d60_471f_961f_cf25500d6a04')
        self.fa4cfdd4_3d60_471f_961f_cf25500d6a04 = attributes[:'fa4cfdd4_3d60_471f_961f_cf25500d6a04']
      end

      if attributes.key?(:'_57c07a9e_e08f_4909_83ae_e12ac2d46abb')
        self._57c07a9e_e08f_4909_83ae_e12ac2d46abb = attributes[:'_57c07a9e_e08f_4909_83ae_e12ac2d46abb']
      end

      if attributes.key?(:'_1815af71_fb11_4b79_8be2_b61e76379bdc')
        self._1815af71_fb11_4b79_8be2_b61e76379bdc = attributes[:'_1815af71_fb11_4b79_8be2_b61e76379bdc']
      end

      if attributes.key?(:'_7d23d5bd_d66e_4458_a41a_f1177b1f7ceb')
        self._7d23d5bd_d66e_4458_a41a_f1177b1f7ceb = attributes[:'_7d23d5bd_d66e_4458_a41a_f1177b1f7ceb']
      end

      if attributes.key?(:'a31c35e3_8d5b_43af_98b4_0b6c6443a14a')
        self.a31c35e3_8d5b_43af_98b4_0b6c6443a14a = attributes[:'a31c35e3_8d5b_43af_98b4_0b6c6443a14a']
      end

      if attributes.key?(:'cf4468e4_0ffe_47d6_a02e_b9ca2ed68df2')
        self.cf4468e4_0ffe_47d6_a02e_b9ca2ed68df2 = attributes[:'cf4468e4_0ffe_47d6_a02e_b9ca2ed68df2']
      end

      if attributes.key?(:'cbcfbce0_8f24_4096_bd55_bb7ea65cd772')
        self.cbcfbce0_8f24_4096_bd55_bb7ea65cd772 = attributes[:'cbcfbce0_8f24_4096_bd55_bb7ea65cd772']
      end

      if attributes.key?(:'c9012cc2_f4a0_40a6_814e_19505b6d0952')
        self.c9012cc2_f4a0_40a6_814e_19505b6d0952 = attributes[:'c9012cc2_f4a0_40a6_814e_19505b6d0952']
      end

      if attributes.key?(:'b2be78ce_2f44_497e_8f8d_3631d229fd02')
        self.b2be78ce_2f44_497e_8f8d_3631d229fd02 = attributes[:'b2be78ce_2f44_497e_8f8d_3631d229fd02']
      end

      if attributes.key?(:'_222c80e1_fe9e_4168_a8ef_1f14752aefec')
        self._222c80e1_fe9e_4168_a8ef_1f14752aefec = attributes[:'_222c80e1_fe9e_4168_a8ef_1f14752aefec']
      end

      if attributes.key?(:'_8772e234_042f_4dbb_8de8_7f5865ad7804')
        self._8772e234_042f_4dbb_8de8_7f5865ad7804 = attributes[:'_8772e234_042f_4dbb_8de8_7f5865ad7804']
      end

      if attributes.key?(:'db201c97_c5a8_4544_a1a1_0fee3fdf2346')
        self.db201c97_c5a8_4544_a1a1_0fee3fdf2346 = attributes[:'db201c97_c5a8_4544_a1a1_0fee3fdf2346']
      end

      if attributes.key?(:'_2fe88a34_c9e5_4c40_a9ca_8cbe3ce3af0a')
        self._2fe88a34_c9e5_4c40_a9ca_8cbe3ce3af0a = attributes[:'_2fe88a34_c9e5_4c40_a9ca_8cbe3ce3af0a']
      end

      if attributes.key?(:'c87a81e2_bdd2_436b_b43f_423ff28cb8fe')
        self.c87a81e2_bdd2_436b_b43f_423ff28cb8fe = attributes[:'c87a81e2_bdd2_436b_b43f_423ff28cb8fe']
      end

      if attributes.key?(:'c516918c_6df9_4768_a00f_d76a2ea4f23d')
        self.c516918c_6df9_4768_a00f_d76a2ea4f23d = attributes[:'c516918c_6df9_4768_a00f_d76a2ea4f23d']
      end

      if attributes.key?(:'_32697a81_5283_405d_b7a7_f372c66f581f')
        self._32697a81_5283_405d_b7a7_f372c66f581f = attributes[:'_32697a81_5283_405d_b7a7_f372c66f581f']
      end

      if attributes.key?(:'_519ff08d_19b2_4454_8d43_218e3d366700')
        self._519ff08d_19b2_4454_8d43_218e3d366700 = attributes[:'_519ff08d_19b2_4454_8d43_218e3d366700']
      end

      if attributes.key?(:'_92d8d4b6_8360_4907_abab_960a3b996e22')
        self._92d8d4b6_8360_4907_abab_960a3b996e22 = attributes[:'_92d8d4b6_8360_4907_abab_960a3b996e22']
      end

      if attributes.key?(:'_29afe6d2_682f_4a24_9ab1_0da8bfc4cc40')
        self._29afe6d2_682f_4a24_9ab1_0da8bfc4cc40 = attributes[:'_29afe6d2_682f_4a24_9ab1_0da8bfc4cc40']
      end

      if attributes.key?(:'_49c2492f_00fa_4e2f_94fb_5e204bf12925')
        self._49c2492f_00fa_4e2f_94fb_5e204bf12925 = attributes[:'_49c2492f_00fa_4e2f_94fb_5e204bf12925']
      end

      if attributes.key?(:'_9e1acacb_0c7f_4c50_a689_a7c325b1d6a0')
        self._9e1acacb_0c7f_4c50_a689_a7c325b1d6a0 = attributes[:'_9e1acacb_0c7f_4c50_a689_a7c325b1d6a0']
      end

      if attributes.key?(:'ec40c78a_66f6_4849_b6f0_f55c68b70bb5')
        self.ec40c78a_66f6_4849_b6f0_f55c68b70bb5 = attributes[:'ec40c78a_66f6_4849_b6f0_f55c68b70bb5']
      end

      if attributes.key?(:'f2d64cbf_2c56_4b12_910f_ad7f6a10a12d')
        self.f2d64cbf_2c56_4b12_910f_ad7f6a10a12d = attributes[:'f2d64cbf_2c56_4b12_910f_ad7f6a10a12d']
      end

      if attributes.key?(:'d0931f74_c9a1_4341_97ee_0cbac22073a0')
        self.d0931f74_c9a1_4341_97ee_0cbac22073a0 = attributes[:'d0931f74_c9a1_4341_97ee_0cbac22073a0']
      end

      if attributes.key?(:'_55444cfe_6ab5_4f3b_b869_c96190cf4f38')
        self._55444cfe_6ab5_4f3b_b869_c96190cf4f38 = attributes[:'_55444cfe_6ab5_4f3b_b869_c96190cf4f38']
      end

      if attributes.key?(:'d266ffba_0169_4541_b17e_69c28d932ffc')
        self.d266ffba_0169_4541_b17e_69c28d932ffc = attributes[:'d266ffba_0169_4541_b17e_69c28d932ffc']
      end

      if attributes.key?(:'_6799411b_24a3_4ee4_bd8b_025c5270f223')
        self._6799411b_24a3_4ee4_bd8b_025c5270f223 = attributes[:'_6799411b_24a3_4ee4_bd8b_025c5270f223']
      end

      if attributes.key?(:'_83775e7c_c993_4b76_bb02_1ba8a2f21a75')
        self._83775e7c_c993_4b76_bb02_1ba8a2f21a75 = attributes[:'_83775e7c_c993_4b76_bb02_1ba8a2f21a75']
      end

      if attributes.key?(:'_32f8ba0f_b612_46f2_a8d6_c340cc11fd96')
        self._32f8ba0f_b612_46f2_a8d6_c340cc11fd96 = attributes[:'_32f8ba0f_b612_46f2_a8d6_c340cc11fd96']
      end

      if attributes.key?(:'b40f4a3c_7ddc_4773_a176_6933aa006a85')
        self.b40f4a3c_7ddc_4773_a176_6933aa006a85 = attributes[:'b40f4a3c_7ddc_4773_a176_6933aa006a85']
      end

      if attributes.key?(:'d31783ea_e5a0_486b_98ab_86e85e3fc49d')
        self.d31783ea_e5a0_486b_98ab_86e85e3fc49d = attributes[:'d31783ea_e5a0_486b_98ab_86e85e3fc49d']
      end

      if attributes.key?(:'_3a4dc160_5a3a_42c0_b211_f64149c6a6ad')
        self._3a4dc160_5a3a_42c0_b211_f64149c6a6ad = attributes[:'_3a4dc160_5a3a_42c0_b211_f64149c6a6ad']
      end

      if attributes.key?(:'_4a87f60d_1cda_4277_be7b_a35f63036860')
        self._4a87f60d_1cda_4277_be7b_a35f63036860 = attributes[:'_4a87f60d_1cda_4277_be7b_a35f63036860']
      end

      if attributes.key?(:'e388e939_5f0d_439d_a2a4_fd81947d74f5')
        self.e388e939_5f0d_439d_a2a4_fd81947d74f5 = attributes[:'e388e939_5f0d_439d_a2a4_fd81947d74f5']
      end

      if attributes.key?(:'_9bd27983_6ecf_4f50_ad9e_dc84343eed73')
        self._9bd27983_6ecf_4f50_ad9e_dc84343eed73 = attributes[:'_9bd27983_6ecf_4f50_ad9e_dc84343eed73']
      end

      if attributes.key?(:'ac6d6c45_6463_496f_be50_34a6b593197d')
        self.ac6d6c45_6463_496f_be50_34a6b593197d = attributes[:'ac6d6c45_6463_496f_be50_34a6b593197d']
      end

      if attributes.key?(:'_8d00758d_ac09_46fd_b50c_f0fa61896aa3')
        self._8d00758d_ac09_46fd_b50c_f0fa61896aa3 = attributes[:'_8d00758d_ac09_46fd_b50c_f0fa61896aa3']
      end
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          f01d54bd_9bd5_4bc2_8944_56f7ae59b9a3 == o.f01d54bd_9bd5_4bc2_8944_56f7ae59b9a3 &&
          _84bb1e74_96e0_484c_8ac7_cc660ea027d2 == o._84bb1e74_96e0_484c_8ac7_cc660ea027d2 &&
          _5557a7ea_8f72_47f3_a27f_c211e2c53a16 == o._5557a7ea_8f72_47f3_a27f_c211e2c53a16 &&
          ff7023b8_f593_4124_99a2_e681063b95e8 == o.ff7023b8_f593_4124_99a2_e681063b95e8 &&
          _39aff72f_c292_434e_98b8_d302f0729cfd == o._39aff72f_c292_434e_98b8_d302f0729cfd &&
          _56ee0472_f6e3_4167_8e50_b419a3078b45 == o._56ee0472_f6e3_4167_8e50_b419a3078b45 &&
          a8ff5de7_cc2b_434d_a4bd_e071b806e59f == o.a8ff5de7_cc2b_434d_a4bd_e071b806e59f &&
          _26755ba5_bbbb_4246_98b8_5fba9ad87f18 == o._26755ba5_bbbb_4246_98b8_5fba9ad87f18 &&
          _9c9999ad_e912_4456_bdb9_4bf8eda0e035 == o._9c9999ad_e912_4456_bdb9_4bf8eda0e035 &&
          fa4cfdd4_3d60_471f_961f_cf25500d6a04 == o.fa4cfdd4_3d60_471f_961f_cf25500d6a04 &&
          _57c07a9e_e08f_4909_83ae_e12ac2d46abb == o._57c07a9e_e08f_4909_83ae_e12ac2d46abb &&
          _1815af71_fb11_4b79_8be2_b61e76379bdc == o._1815af71_fb11_4b79_8be2_b61e76379bdc &&
          _7d23d5bd_d66e_4458_a41a_f1177b1f7ceb == o._7d23d5bd_d66e_4458_a41a_f1177b1f7ceb &&
          a31c35e3_8d5b_43af_98b4_0b6c6443a14a == o.a31c35e3_8d5b_43af_98b4_0b6c6443a14a &&
          cf4468e4_0ffe_47d6_a02e_b9ca2ed68df2 == o.cf4468e4_0ffe_47d6_a02e_b9ca2ed68df2 &&
          cbcfbce0_8f24_4096_bd55_bb7ea65cd772 == o.cbcfbce0_8f24_4096_bd55_bb7ea65cd772 &&
          c9012cc2_f4a0_40a6_814e_19505b6d0952 == o.c9012cc2_f4a0_40a6_814e_19505b6d0952 &&
          b2be78ce_2f44_497e_8f8d_3631d229fd02 == o.b2be78ce_2f44_497e_8f8d_3631d229fd02 &&
          _222c80e1_fe9e_4168_a8ef_1f14752aefec == o._222c80e1_fe9e_4168_a8ef_1f14752aefec &&
          _8772e234_042f_4dbb_8de8_7f5865ad7804 == o._8772e234_042f_4dbb_8de8_7f5865ad7804 &&
          db201c97_c5a8_4544_a1a1_0fee3fdf2346 == o.db201c97_c5a8_4544_a1a1_0fee3fdf2346 &&
          _2fe88a34_c9e5_4c40_a9ca_8cbe3ce3af0a == o._2fe88a34_c9e5_4c40_a9ca_8cbe3ce3af0a &&
          c87a81e2_bdd2_436b_b43f_423ff28cb8fe == o.c87a81e2_bdd2_436b_b43f_423ff28cb8fe &&
          c516918c_6df9_4768_a00f_d76a2ea4f23d == o.c516918c_6df9_4768_a00f_d76a2ea4f23d &&
          _32697a81_5283_405d_b7a7_f372c66f581f == o._32697a81_5283_405d_b7a7_f372c66f581f &&
          _519ff08d_19b2_4454_8d43_218e3d366700 == o._519ff08d_19b2_4454_8d43_218e3d366700 &&
          _92d8d4b6_8360_4907_abab_960a3b996e22 == o._92d8d4b6_8360_4907_abab_960a3b996e22 &&
          _29afe6d2_682f_4a24_9ab1_0da8bfc4cc40 == o._29afe6d2_682f_4a24_9ab1_0da8bfc4cc40 &&
          _49c2492f_00fa_4e2f_94fb_5e204bf12925 == o._49c2492f_00fa_4e2f_94fb_5e204bf12925 &&
          _9e1acacb_0c7f_4c50_a689_a7c325b1d6a0 == o._9e1acacb_0c7f_4c50_a689_a7c325b1d6a0 &&
          ec40c78a_66f6_4849_b6f0_f55c68b70bb5 == o.ec40c78a_66f6_4849_b6f0_f55c68b70bb5 &&
          f2d64cbf_2c56_4b12_910f_ad7f6a10a12d == o.f2d64cbf_2c56_4b12_910f_ad7f6a10a12d &&
          d0931f74_c9a1_4341_97ee_0cbac22073a0 == o.d0931f74_c9a1_4341_97ee_0cbac22073a0 &&
          _55444cfe_6ab5_4f3b_b869_c96190cf4f38 == o._55444cfe_6ab5_4f3b_b869_c96190cf4f38 &&
          d266ffba_0169_4541_b17e_69c28d932ffc == o.d266ffba_0169_4541_b17e_69c28d932ffc &&
          _6799411b_24a3_4ee4_bd8b_025c5270f223 == o._6799411b_24a3_4ee4_bd8b_025c5270f223 &&
          _83775e7c_c993_4b76_bb02_1ba8a2f21a75 == o._83775e7c_c993_4b76_bb02_1ba8a2f21a75 &&
          _32f8ba0f_b612_46f2_a8d6_c340cc11fd96 == o._32f8ba0f_b612_46f2_a8d6_c340cc11fd96 &&
          b40f4a3c_7ddc_4773_a176_6933aa006a85 == o.b40f4a3c_7ddc_4773_a176_6933aa006a85 &&
          d31783ea_e5a0_486b_98ab_86e85e3fc49d == o.d31783ea_e5a0_486b_98ab_86e85e3fc49d &&
          _3a4dc160_5a3a_42c0_b211_f64149c6a6ad == o._3a4dc160_5a3a_42c0_b211_f64149c6a6ad &&
          _4a87f60d_1cda_4277_be7b_a35f63036860 == o._4a87f60d_1cda_4277_be7b_a35f63036860 &&
          e388e939_5f0d_439d_a2a4_fd81947d74f5 == o.e388e939_5f0d_439d_a2a4_fd81947d74f5 &&
          _9bd27983_6ecf_4f50_ad9e_dc84343eed73 == o._9bd27983_6ecf_4f50_ad9e_dc84343eed73 &&
          ac6d6c45_6463_496f_be50_34a6b593197d == o.ac6d6c45_6463_496f_be50_34a6b593197d &&
          _8d00758d_ac09_46fd_b50c_f0fa61896aa3 == o._8d00758d_ac09_46fd_b50c_f0fa61896aa3
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [f01d54bd_9bd5_4bc2_8944_56f7ae59b9a3, _84bb1e74_96e0_484c_8ac7_cc660ea027d2, _5557a7ea_8f72_47f3_a27f_c211e2c53a16, ff7023b8_f593_4124_99a2_e681063b95e8, _39aff72f_c292_434e_98b8_d302f0729cfd, _56ee0472_f6e3_4167_8e50_b419a3078b45, a8ff5de7_cc2b_434d_a4bd_e071b806e59f, _26755ba5_bbbb_4246_98b8_5fba9ad87f18, _9c9999ad_e912_4456_bdb9_4bf8eda0e035, fa4cfdd4_3d60_471f_961f_cf25500d6a04, _57c07a9e_e08f_4909_83ae_e12ac2d46abb, _1815af71_fb11_4b79_8be2_b61e76379bdc, _7d23d5bd_d66e_4458_a41a_f1177b1f7ceb, a31c35e3_8d5b_43af_98b4_0b6c6443a14a, cf4468e4_0ffe_47d6_a02e_b9ca2ed68df2, cbcfbce0_8f24_4096_bd55_bb7ea65cd772, c9012cc2_f4a0_40a6_814e_19505b6d0952, b2be78ce_2f44_497e_8f8d_3631d229fd02, _222c80e1_fe9e_4168_a8ef_1f14752aefec, _8772e234_042f_4dbb_8de8_7f5865ad7804, db201c97_c5a8_4544_a1a1_0fee3fdf2346, _2fe88a34_c9e5_4c40_a9ca_8cbe3ce3af0a, c87a81e2_bdd2_436b_b43f_423ff28cb8fe, c516918c_6df9_4768_a00f_d76a2ea4f23d, _32697a81_5283_405d_b7a7_f372c66f581f, _519ff08d_19b2_4454_8d43_218e3d366700, _92d8d4b6_8360_4907_abab_960a3b996e22, _29afe6d2_682f_4a24_9ab1_0da8bfc4cc40, _49c2492f_00fa_4e2f_94fb_5e204bf12925, _9e1acacb_0c7f_4c50_a689_a7c325b1d6a0, ec40c78a_66f6_4849_b6f0_f55c68b70bb5, f2d64cbf_2c56_4b12_910f_ad7f6a10a12d, d0931f74_c9a1_4341_97ee_0cbac22073a0, _55444cfe_6ab5_4f3b_b869_c96190cf4f38, d266ffba_0169_4541_b17e_69c28d932ffc, _6799411b_24a3_4ee4_bd8b_025c5270f223, _83775e7c_c993_4b76_bb02_1ba8a2f21a75, _32f8ba0f_b612_46f2_a8d6_c340cc11fd96, b40f4a3c_7ddc_4773_a176_6933aa006a85, d31783ea_e5a0_486b_98ab_86e85e3fc49d, _3a4dc160_5a3a_42c0_b211_f64149c6a6ad, _4a87f60d_1cda_4277_be7b_a35f63036860, e388e939_5f0d_439d_a2a4_fd81947d74f5, _9bd27983_6ecf_4f50_ad9e_dc84343eed73, ac6d6c45_6463_496f_be50_34a6b593197d, _8d00758d_ac09_46fd_b50c_f0fa61896aa3].hash
    end

# Builds the object from hash
# @param [Hash] attributes Models attributes in the form of hash
# @return [Object] Returns the model itself
def self.build_from_hash(attributes)
  return nil unless attributes.is_a?(Hash)
  attributes = attributes.transform_keys(&:to_sym)
  transformed_hash = {}
  openapi_types.each_pair do |key, type|
    if attributes.key?(attribute_map[key]) && attributes[attribute_map[key]].nil?
      transformed_hash["#{key}"] = nil
    elsif type =~ /\AArray<(.*)>/i
      # check to ensure the input is an array given that the attribute
      # is documented as an array but the input is not
      if attributes[attribute_map[key]].is_a?(Array)
        transformed_hash["#{key}"] = attributes[attribute_map[key]].map { |v| _deserialize($1, v) }
      end
    elsif !attributes[attribute_map[key]].nil?
      transformed_hash["#{key}"] = _deserialize(type, attributes[attribute_map[key]])
    end
  end
  new(transformed_hash) # `new` will call the initialize method of the specific model class.
end

# Deserializes the data based on type
# @param string type Data type
# @param string value Value to be deserialized
# @return [Object] Deserialized data
def self._deserialize(type, value)
  case type.to_sym
  when :Time
    Time.parse(value)
  when :Date
    Date.parse(value)
  when :String
    value.to_s
  when :Integer
    value.to_i
  when :Float
    value.to_f
  when :Boolean
    if value.to_s =~ /\A(true|t|yes|y|1)\z/i
      true
    else
      false
    end
  when :Object
    # generic object (usually a Hash), return directly
    value
  when /\AArray<(?<inner_type>.+)>\z/
    inner_type = Regexp.last_match[:inner_type]
    value.map { |v| _deserialize(inner_type, v) }
  when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
    k_type = Regexp.last_match[:k_type]
    v_type = Regexp.last_match[:v_type]
    {}.tap do |hash|
      value.each do |k, v|
        hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
      end
    end
  else # model
    # models (e.g. Pet) or oneOf/anyOf constructs that resolve to a model name
    # MODIFIED: Ensure model is looked up in the Models namespace
    # 'type' here is expected to be the simple class name (e.g., "User", "OrderDetails")
    klass = Zitadel::Client::Models.const_get(type)
    # The `klass.build` method is for oneOf/anyOf types (defined in partial_oneof_module.mustache / partial_anyof_module.mustache)
    # The `klass.build_from_hash` is for regular model types (defined in this base_object.mustache itself)
    if klass.respond_to?(:openapi_one_of) || klass.respond_to?(:openapi_any_of) || klass.respond_to?(:openapi_allOf)
      klass.build(value) # For oneOf/anyOf/allOf, delegate to their specific build method
    else
      klass.build_from_hash(value) # For regular models
    end
  end
end

# Returns the string representation of the object
# @return [String] String presentation of the object
def to_s
  to_hash.to_s
end

# to_body is an alias to to_hash (backward compatibility)
# @return [Hash] Returns the object in the form of hash
def to_body
  to_hash
end

# Returns the object in the form of hash
# @return [Hash] Returns the object in the form of hash
def to_hash
  hash = {} # Calls super.to_hash if parent exists
  self.class.attribute_map.each_pair do |attr, param|
    value = self.send(attr)
    if value.nil?
      is_nullable = self.class.openapi_nullable.include?(attr)
      next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
    end

    hash[param] = _to_hash(value)
  end
  hash
end

# Outputs non-array value in the form of hash
# For object, use to_hash. Otherwise, just return the value
# @param [Object] value Any valid value
# @return [Hash] Returns the value in the form of hash
def _to_hash(value)
  if value.is_a?(Array)
    value.compact.map { |v| _to_hash(v) }
  elsif value.is_a?(Hash)
    {}.tap do |hash|
      value.each { |k, v| hash[k] = _to_hash(v) }
    end
  elsif value.respond_to? :to_hash
    value.to_hash
  else
    value
  end
end

  end

end
