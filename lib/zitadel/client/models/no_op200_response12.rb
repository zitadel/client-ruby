=begin
#Zitadel SDK

#The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.13.0

=end

require 'date'
require 'time'

module Zitadel::Client::Models
        class NoOp200Response12
    attr_accessor :_4a5f66e5_62df_47f1_a7c1_4292e7a3d59d

    attr_accessor :db9c3d9f_b363_4123_8437_b4f1743fbfbd

    attr_accessor :c1cbe65c_66e5_47b4_a56e_99dc3428675e

    attr_accessor :_42773615_9063_482e_a893_8dbb4f0061e6

    attr_accessor :ab4be51d_43a3_4591_acd0_98066d330d72

    attr_accessor :a1ed69b3_bfe4_49cb_a4e8_7dec63251fb9

    attr_accessor :_20c478fb_b505_4a34_9993_e178c1077637

    attr_accessor :_06cb9b63_b118_42ac_88bf_0a9285c4593b

    attr_accessor :_39130548_b2cc_49c1_be93_15be521a4a5d

    attr_accessor :_9471ad31_66f6_46da_ab2e_fc95bf2473bf

    attr_accessor :b90c1d87_2a4f_4f96_be4b_210a51565e7f

    attr_accessor :_73dd8ce1_3959_47fc_be81_5952d085e621

    attr_accessor :_1d2d15e3_2250_44f3_a82a_235cad85d61a

    attr_accessor :_426a987f_ce31_42a3_8392_327151c0be17

    attr_accessor :_1e5f332f_dbf5_4d12_8918_e7d4d1fa2a5a

    attr_accessor :ff9c2df3_689a_4505_a9d1_682b816cbbef

    attr_accessor :f81e551b_3651_4b1a_b328_5d7f80e3442a

    attr_accessor :bbc17609_9aba_4f8b_af24_a16fc0a1b678

    attr_accessor :_8cbca486_0d1b_4642_b230_e92be4766b67

    attr_accessor :_61e723b4_bfeb_453c_ba23_dcd53db8de9a

    attr_accessor :fe158fc7_9d74_4329_87ba_6e0627eebfa8

    attr_accessor :_00eadba5_133b_4b1d_92fa_f6b73bdfa13b

    attr_accessor :ace6c7f6_03e6_4ea2_926e_40eefb54e2eb

    attr_accessor :_922f281c_e1f8_485b_8708_026a6f5522c0

    attr_accessor :_318a3e7c_4523_44db_b925_e6e220aa68ed

    attr_accessor :_9573e110_df5a_4534_b46b_da43dba5f5b8

    attr_accessor :_567ba4c3_2529_4073_a988_736da057e9de

    attr_accessor :_1689ea85_2c23_44b0_83a5_ce056b0f9536

    attr_accessor :_3000c45b_4327_4c14_88a8_6dab38aeb240

    attr_accessor :_4378d259_2102_489f_b29b_f7344ea237ee

    attr_accessor :_57e6d9c6_228b_41bc_93cc_e06f9a53a7c4

    attr_accessor :f6e1e73f_0b23_4a60_9b6b_24f0507f1c1e

    attr_accessor :_63800c77_c93c_4b7d_9f3c_80bc67bfcc44

    attr_accessor :_5aada2b6_58e4_4183_964b_c85655ea15b0

    attr_accessor :_60710c0b_c685_41f5_9dd1_e785d63dc006

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'_4a5f66e5_62df_47f1_a7c1_4292e7a3d59d' => :'4a5f66e5-62df-47f1-a7c1-4292e7a3d59d',
        :'db9c3d9f_b363_4123_8437_b4f1743fbfbd' => :'db9c3d9f-b363-4123-8437-b4f1743fbfbd',
        :'c1cbe65c_66e5_47b4_a56e_99dc3428675e' => :'c1cbe65c-66e5-47b4-a56e-99dc3428675e',
        :'_42773615_9063_482e_a893_8dbb4f0061e6' => :'42773615-9063-482e-a893-8dbb4f0061e6',
        :'ab4be51d_43a3_4591_acd0_98066d330d72' => :'ab4be51d-43a3-4591-acd0-98066d330d72',
        :'a1ed69b3_bfe4_49cb_a4e8_7dec63251fb9' => :'a1ed69b3-bfe4-49cb-a4e8-7dec63251fb9',
        :'_20c478fb_b505_4a34_9993_e178c1077637' => :'20c478fb-b505-4a34-9993-e178c1077637',
        :'_06cb9b63_b118_42ac_88bf_0a9285c4593b' => :'06cb9b63-b118-42ac-88bf-0a9285c4593b',
        :'_39130548_b2cc_49c1_be93_15be521a4a5d' => :'39130548-b2cc-49c1-be93-15be521a4a5d',
        :'_9471ad31_66f6_46da_ab2e_fc95bf2473bf' => :'9471ad31-66f6-46da-ab2e-fc95bf2473bf',
        :'b90c1d87_2a4f_4f96_be4b_210a51565e7f' => :'b90c1d87-2a4f-4f96-be4b-210a51565e7f',
        :'_73dd8ce1_3959_47fc_be81_5952d085e621' => :'73dd8ce1-3959-47fc-be81-5952d085e621',
        :'_1d2d15e3_2250_44f3_a82a_235cad85d61a' => :'1d2d15e3-2250-44f3-a82a-235cad85d61a',
        :'_426a987f_ce31_42a3_8392_327151c0be17' => :'426a987f-ce31-42a3-8392-327151c0be17',
        :'_1e5f332f_dbf5_4d12_8918_e7d4d1fa2a5a' => :'1e5f332f-dbf5-4d12-8918-e7d4d1fa2a5a',
        :'ff9c2df3_689a_4505_a9d1_682b816cbbef' => :'ff9c2df3-689a-4505-a9d1-682b816cbbef',
        :'f81e551b_3651_4b1a_b328_5d7f80e3442a' => :'f81e551b-3651-4b1a-b328-5d7f80e3442a',
        :'bbc17609_9aba_4f8b_af24_a16fc0a1b678' => :'bbc17609-9aba-4f8b-af24-a16fc0a1b678',
        :'_8cbca486_0d1b_4642_b230_e92be4766b67' => :'8cbca486-0d1b-4642-b230-e92be4766b67',
        :'_61e723b4_bfeb_453c_ba23_dcd53db8de9a' => :'61e723b4-bfeb-453c-ba23-dcd53db8de9a',
        :'fe158fc7_9d74_4329_87ba_6e0627eebfa8' => :'fe158fc7-9d74-4329-87ba-6e0627eebfa8',
        :'_00eadba5_133b_4b1d_92fa_f6b73bdfa13b' => :'00eadba5-133b-4b1d-92fa-f6b73bdfa13b',
        :'ace6c7f6_03e6_4ea2_926e_40eefb54e2eb' => :'ace6c7f6-03e6-4ea2-926e-40eefb54e2eb',
        :'_922f281c_e1f8_485b_8708_026a6f5522c0' => :'922f281c-e1f8-485b-8708-026a6f5522c0',
        :'_318a3e7c_4523_44db_b925_e6e220aa68ed' => :'318a3e7c-4523-44db-b925-e6e220aa68ed',
        :'_9573e110_df5a_4534_b46b_da43dba5f5b8' => :'9573e110-df5a-4534-b46b-da43dba5f5b8',
        :'_567ba4c3_2529_4073_a988_736da057e9de' => :'567ba4c3-2529-4073-a988-736da057e9de',
        :'_1689ea85_2c23_44b0_83a5_ce056b0f9536' => :'1689ea85-2c23-44b0-83a5-ce056b0f9536',
        :'_3000c45b_4327_4c14_88a8_6dab38aeb240' => :'3000c45b-4327-4c14-88a8-6dab38aeb240',
        :'_4378d259_2102_489f_b29b_f7344ea237ee' => :'4378d259-2102-489f-b29b-f7344ea237ee',
        :'_57e6d9c6_228b_41bc_93cc_e06f9a53a7c4' => :'57e6d9c6-228b-41bc-93cc-e06f9a53a7c4',
        :'f6e1e73f_0b23_4a60_9b6b_24f0507f1c1e' => :'f6e1e73f-0b23-4a60-9b6b-24f0507f1c1e',
        :'_63800c77_c93c_4b7d_9f3c_80bc67bfcc44' => :'63800c77-c93c-4b7d-9f3c-80bc67bfcc44',
        :'_5aada2b6_58e4_4183_964b_c85655ea15b0' => :'5aada2b6-58e4-4183-964b-c85655ea15b0',
        :'_60710c0b_c685_41f5_9dd1_e785d63dc006' => :'60710c0b-c685-41f5-9dd1-e785d63dc006'
      }
    end

    # Returns attribute mapping this model knows about
    def self.acceptable_attribute_map
      attribute_map
    end

    # Returns all the JSON keys this model knows about
    def self.acceptable_attributes
      acceptable_attribute_map.values
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'_4a5f66e5_62df_47f1_a7c1_4292e7a3d59d' => :'BetaUserServiceAndQuery',
        :'db9c3d9f_b363_4123_8437_b4f1743fbfbd' => :'BetaUserServiceDisplayNameQuery',
        :'c1cbe65c_66e5_47b4_a56e_99dc3428675e' => :'BetaUserServiceEmailQuery',
        :'_42773615_9063_482e_a893_8dbb4f0061e6' => :'BetaUserServiceFirstNameQuery',
        :'ab4be51d_43a3_4591_acd0_98066d330d72' => :'BetaUserServiceFormData',
        :'a1ed69b3_bfe4_49cb_a4e8_7dec63251fb9' => :'BetaUserServiceHashedPassword',
        :'_20c478fb_b505_4a34_9993_e178c1077637' => :'BetaUserServiceHumanUser',
        :'_06cb9b63_b118_42ac_88bf_0a9285c4593b' => :'BetaUserServiceIDPIntent',
        :'_39130548_b2cc_49c1_be93_15be521a4a5d' => :'BetaUserServiceIDPLDAPAccessInformation',
        :'_9471ad31_66f6_46da_ab2e_fc95bf2473bf' => :'BetaUserServiceIDPOAuthAccessInformation',
        :'b90c1d87_2a4f_4f96_be4b_210a51565e7f' => :'BetaUserServiceIDPSAMLAccessInformation',
        :'_73dd8ce1_3959_47fc_be81_5952d085e621' => :'BetaUserServiceInUserEmailsQuery',
        :'_1d2d15e3_2250_44f3_a82a_235cad85d61a' => :'BetaUserServiceInUserIDQuery',
        :'_426a987f_ce31_42a3_8392_327151c0be17' => :'BetaUserServiceLDAPCredentials',
        :'_1e5f332f_dbf5_4d12_8918_e7d4d1fa2a5a' => :'BetaUserServiceLastNameQuery',
        :'ff9c2df3_689a_4505_a9d1_682b816cbbef' => :'BetaUserServiceLoginNameQuery',
        :'f81e551b_3651_4b1a_b328_5d7f80e3442a' => :'BetaUserServiceMachineUser',
        :'bbc17609_9aba_4f8b_af24_a16fc0a1b678' => :'BetaUserServiceNickNameQuery',
        :'_8cbca486_0d1b_4642_b230_e92be4766b67' => :'BetaUserServiceNotQuery',
        :'_61e723b4_bfeb_453c_ba23_dcd53db8de9a' => :'BetaUserServiceOrQuery',
        :'fe158fc7_9d74_4329_87ba_6e0627eebfa8' => :'BetaUserServiceOrganizationIdQuery',
        :'_00eadba5_133b_4b1d_92fa_f6b73bdfa13b' => :'BetaUserServicePassword',
        :'ace6c7f6_03e6_4ea2_926e_40eefb54e2eb' => :'BetaUserServicePhoneQuery',
        :'_922f281c_e1f8_485b_8708_026a6f5522c0' => :'BetaUserServiceRedirectURLs',
        :'_318a3e7c_4523_44db_b925_e6e220aa68ed' => :'Object',
        :'_9573e110_df5a_4534_b46b_da43dba5f5b8' => :'Object',
        :'_567ba4c3_2529_4073_a988_736da057e9de' => :'Object',
        :'_1689ea85_2c23_44b0_83a5_ce056b0f9536' => :'Object',
        :'_3000c45b_4327_4c14_88a8_6dab38aeb240' => :'BetaUserServiceSendEmailVerificationCode',
        :'_4378d259_2102_489f_b29b_f7344ea237ee' => :'BetaUserServiceSendPasskeyRegistrationLink',
        :'_57e6d9c6_228b_41bc_93cc_e06f9a53a7c4' => :'BetaUserServiceSendPasswordResetLink',
        :'f6e1e73f_0b23_4a60_9b6b_24f0507f1c1e' => :'Object',
        :'_63800c77_c93c_4b7d_9f3c_80bc67bfcc44' => :'BetaUserServiceStateQuery',
        :'_5aada2b6_58e4_4183_964b_c85655ea15b0' => :'BetaUserServiceTypeQuery',
        :'_60710c0b_c685_41f5_9dd1_e785d63dc006' => :'BetaUserServiceUserNameQuery'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
      ])
    end

    # Initializes the object
    # @param [Hash] attributes Models attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        # MODIFIED: Updated class name in error message
        fail ArgumentError, "The input argument (attributes) must be a hash in `Zitadel::Client::Models::NoOp200Response12` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      acceptable_attribute_map = self.class.acceptable_attribute_map
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!acceptable_attribute_map.key?(k.to_sym))
          # MODIFIED: Updated class name in error message
          fail ArgumentError, "`#{k}` is not a valid attribute in `Zitadel::Client::Models::NoOp200Response12`. Please check the name to make sure it's valid. List of attributes: " + acceptable_attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'_4a5f66e5_62df_47f1_a7c1_4292e7a3d59d')
        self._4a5f66e5_62df_47f1_a7c1_4292e7a3d59d = attributes[:'_4a5f66e5_62df_47f1_a7c1_4292e7a3d59d']
      end

      if attributes.key?(:'db9c3d9f_b363_4123_8437_b4f1743fbfbd')
        self.db9c3d9f_b363_4123_8437_b4f1743fbfbd = attributes[:'db9c3d9f_b363_4123_8437_b4f1743fbfbd']
      end

      if attributes.key?(:'c1cbe65c_66e5_47b4_a56e_99dc3428675e')
        self.c1cbe65c_66e5_47b4_a56e_99dc3428675e = attributes[:'c1cbe65c_66e5_47b4_a56e_99dc3428675e']
      end

      if attributes.key?(:'_42773615_9063_482e_a893_8dbb4f0061e6')
        self._42773615_9063_482e_a893_8dbb4f0061e6 = attributes[:'_42773615_9063_482e_a893_8dbb4f0061e6']
      end

      if attributes.key?(:'ab4be51d_43a3_4591_acd0_98066d330d72')
        self.ab4be51d_43a3_4591_acd0_98066d330d72 = attributes[:'ab4be51d_43a3_4591_acd0_98066d330d72']
      end

      if attributes.key?(:'a1ed69b3_bfe4_49cb_a4e8_7dec63251fb9')
        self.a1ed69b3_bfe4_49cb_a4e8_7dec63251fb9 = attributes[:'a1ed69b3_bfe4_49cb_a4e8_7dec63251fb9']
      end

      if attributes.key?(:'_20c478fb_b505_4a34_9993_e178c1077637')
        self._20c478fb_b505_4a34_9993_e178c1077637 = attributes[:'_20c478fb_b505_4a34_9993_e178c1077637']
      end

      if attributes.key?(:'_06cb9b63_b118_42ac_88bf_0a9285c4593b')
        self._06cb9b63_b118_42ac_88bf_0a9285c4593b = attributes[:'_06cb9b63_b118_42ac_88bf_0a9285c4593b']
      end

      if attributes.key?(:'_39130548_b2cc_49c1_be93_15be521a4a5d')
        self._39130548_b2cc_49c1_be93_15be521a4a5d = attributes[:'_39130548_b2cc_49c1_be93_15be521a4a5d']
      end

      if attributes.key?(:'_9471ad31_66f6_46da_ab2e_fc95bf2473bf')
        self._9471ad31_66f6_46da_ab2e_fc95bf2473bf = attributes[:'_9471ad31_66f6_46da_ab2e_fc95bf2473bf']
      end

      if attributes.key?(:'b90c1d87_2a4f_4f96_be4b_210a51565e7f')
        self.b90c1d87_2a4f_4f96_be4b_210a51565e7f = attributes[:'b90c1d87_2a4f_4f96_be4b_210a51565e7f']
      end

      if attributes.key?(:'_73dd8ce1_3959_47fc_be81_5952d085e621')
        self._73dd8ce1_3959_47fc_be81_5952d085e621 = attributes[:'_73dd8ce1_3959_47fc_be81_5952d085e621']
      end

      if attributes.key?(:'_1d2d15e3_2250_44f3_a82a_235cad85d61a')
        self._1d2d15e3_2250_44f3_a82a_235cad85d61a = attributes[:'_1d2d15e3_2250_44f3_a82a_235cad85d61a']
      end

      if attributes.key?(:'_426a987f_ce31_42a3_8392_327151c0be17')
        self._426a987f_ce31_42a3_8392_327151c0be17 = attributes[:'_426a987f_ce31_42a3_8392_327151c0be17']
      end

      if attributes.key?(:'_1e5f332f_dbf5_4d12_8918_e7d4d1fa2a5a')
        self._1e5f332f_dbf5_4d12_8918_e7d4d1fa2a5a = attributes[:'_1e5f332f_dbf5_4d12_8918_e7d4d1fa2a5a']
      end

      if attributes.key?(:'ff9c2df3_689a_4505_a9d1_682b816cbbef')
        self.ff9c2df3_689a_4505_a9d1_682b816cbbef = attributes[:'ff9c2df3_689a_4505_a9d1_682b816cbbef']
      end

      if attributes.key?(:'f81e551b_3651_4b1a_b328_5d7f80e3442a')
        self.f81e551b_3651_4b1a_b328_5d7f80e3442a = attributes[:'f81e551b_3651_4b1a_b328_5d7f80e3442a']
      end

      if attributes.key?(:'bbc17609_9aba_4f8b_af24_a16fc0a1b678')
        self.bbc17609_9aba_4f8b_af24_a16fc0a1b678 = attributes[:'bbc17609_9aba_4f8b_af24_a16fc0a1b678']
      end

      if attributes.key?(:'_8cbca486_0d1b_4642_b230_e92be4766b67')
        self._8cbca486_0d1b_4642_b230_e92be4766b67 = attributes[:'_8cbca486_0d1b_4642_b230_e92be4766b67']
      end

      if attributes.key?(:'_61e723b4_bfeb_453c_ba23_dcd53db8de9a')
        self._61e723b4_bfeb_453c_ba23_dcd53db8de9a = attributes[:'_61e723b4_bfeb_453c_ba23_dcd53db8de9a']
      end

      if attributes.key?(:'fe158fc7_9d74_4329_87ba_6e0627eebfa8')
        self.fe158fc7_9d74_4329_87ba_6e0627eebfa8 = attributes[:'fe158fc7_9d74_4329_87ba_6e0627eebfa8']
      end

      if attributes.key?(:'_00eadba5_133b_4b1d_92fa_f6b73bdfa13b')
        self._00eadba5_133b_4b1d_92fa_f6b73bdfa13b = attributes[:'_00eadba5_133b_4b1d_92fa_f6b73bdfa13b']
      end

      if attributes.key?(:'ace6c7f6_03e6_4ea2_926e_40eefb54e2eb')
        self.ace6c7f6_03e6_4ea2_926e_40eefb54e2eb = attributes[:'ace6c7f6_03e6_4ea2_926e_40eefb54e2eb']
      end

      if attributes.key?(:'_922f281c_e1f8_485b_8708_026a6f5522c0')
        self._922f281c_e1f8_485b_8708_026a6f5522c0 = attributes[:'_922f281c_e1f8_485b_8708_026a6f5522c0']
      end

      if attributes.key?(:'_318a3e7c_4523_44db_b925_e6e220aa68ed')
        self._318a3e7c_4523_44db_b925_e6e220aa68ed = attributes[:'_318a3e7c_4523_44db_b925_e6e220aa68ed']
      end

      if attributes.key?(:'_9573e110_df5a_4534_b46b_da43dba5f5b8')
        self._9573e110_df5a_4534_b46b_da43dba5f5b8 = attributes[:'_9573e110_df5a_4534_b46b_da43dba5f5b8']
      end

      if attributes.key?(:'_567ba4c3_2529_4073_a988_736da057e9de')
        self._567ba4c3_2529_4073_a988_736da057e9de = attributes[:'_567ba4c3_2529_4073_a988_736da057e9de']
      end

      if attributes.key?(:'_1689ea85_2c23_44b0_83a5_ce056b0f9536')
        self._1689ea85_2c23_44b0_83a5_ce056b0f9536 = attributes[:'_1689ea85_2c23_44b0_83a5_ce056b0f9536']
      end

      if attributes.key?(:'_3000c45b_4327_4c14_88a8_6dab38aeb240')
        self._3000c45b_4327_4c14_88a8_6dab38aeb240 = attributes[:'_3000c45b_4327_4c14_88a8_6dab38aeb240']
      end

      if attributes.key?(:'_4378d259_2102_489f_b29b_f7344ea237ee')
        self._4378d259_2102_489f_b29b_f7344ea237ee = attributes[:'_4378d259_2102_489f_b29b_f7344ea237ee']
      end

      if attributes.key?(:'_57e6d9c6_228b_41bc_93cc_e06f9a53a7c4')
        self._57e6d9c6_228b_41bc_93cc_e06f9a53a7c4 = attributes[:'_57e6d9c6_228b_41bc_93cc_e06f9a53a7c4']
      end

      if attributes.key?(:'f6e1e73f_0b23_4a60_9b6b_24f0507f1c1e')
        self.f6e1e73f_0b23_4a60_9b6b_24f0507f1c1e = attributes[:'f6e1e73f_0b23_4a60_9b6b_24f0507f1c1e']
      end

      if attributes.key?(:'_63800c77_c93c_4b7d_9f3c_80bc67bfcc44')
        self._63800c77_c93c_4b7d_9f3c_80bc67bfcc44 = attributes[:'_63800c77_c93c_4b7d_9f3c_80bc67bfcc44']
      end

      if attributes.key?(:'_5aada2b6_58e4_4183_964b_c85655ea15b0')
        self._5aada2b6_58e4_4183_964b_c85655ea15b0 = attributes[:'_5aada2b6_58e4_4183_964b_c85655ea15b0']
      end

      if attributes.key?(:'_60710c0b_c685_41f5_9dd1_e785d63dc006')
        self._60710c0b_c685_41f5_9dd1_e785d63dc006 = attributes[:'_60710c0b_c685_41f5_9dd1_e785d63dc006']
      end
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          _4a5f66e5_62df_47f1_a7c1_4292e7a3d59d == o._4a5f66e5_62df_47f1_a7c1_4292e7a3d59d &&
          db9c3d9f_b363_4123_8437_b4f1743fbfbd == o.db9c3d9f_b363_4123_8437_b4f1743fbfbd &&
          c1cbe65c_66e5_47b4_a56e_99dc3428675e == o.c1cbe65c_66e5_47b4_a56e_99dc3428675e &&
          _42773615_9063_482e_a893_8dbb4f0061e6 == o._42773615_9063_482e_a893_8dbb4f0061e6 &&
          ab4be51d_43a3_4591_acd0_98066d330d72 == o.ab4be51d_43a3_4591_acd0_98066d330d72 &&
          a1ed69b3_bfe4_49cb_a4e8_7dec63251fb9 == o.a1ed69b3_bfe4_49cb_a4e8_7dec63251fb9 &&
          _20c478fb_b505_4a34_9993_e178c1077637 == o._20c478fb_b505_4a34_9993_e178c1077637 &&
          _06cb9b63_b118_42ac_88bf_0a9285c4593b == o._06cb9b63_b118_42ac_88bf_0a9285c4593b &&
          _39130548_b2cc_49c1_be93_15be521a4a5d == o._39130548_b2cc_49c1_be93_15be521a4a5d &&
          _9471ad31_66f6_46da_ab2e_fc95bf2473bf == o._9471ad31_66f6_46da_ab2e_fc95bf2473bf &&
          b90c1d87_2a4f_4f96_be4b_210a51565e7f == o.b90c1d87_2a4f_4f96_be4b_210a51565e7f &&
          _73dd8ce1_3959_47fc_be81_5952d085e621 == o._73dd8ce1_3959_47fc_be81_5952d085e621 &&
          _1d2d15e3_2250_44f3_a82a_235cad85d61a == o._1d2d15e3_2250_44f3_a82a_235cad85d61a &&
          _426a987f_ce31_42a3_8392_327151c0be17 == o._426a987f_ce31_42a3_8392_327151c0be17 &&
          _1e5f332f_dbf5_4d12_8918_e7d4d1fa2a5a == o._1e5f332f_dbf5_4d12_8918_e7d4d1fa2a5a &&
          ff9c2df3_689a_4505_a9d1_682b816cbbef == o.ff9c2df3_689a_4505_a9d1_682b816cbbef &&
          f81e551b_3651_4b1a_b328_5d7f80e3442a == o.f81e551b_3651_4b1a_b328_5d7f80e3442a &&
          bbc17609_9aba_4f8b_af24_a16fc0a1b678 == o.bbc17609_9aba_4f8b_af24_a16fc0a1b678 &&
          _8cbca486_0d1b_4642_b230_e92be4766b67 == o._8cbca486_0d1b_4642_b230_e92be4766b67 &&
          _61e723b4_bfeb_453c_ba23_dcd53db8de9a == o._61e723b4_bfeb_453c_ba23_dcd53db8de9a &&
          fe158fc7_9d74_4329_87ba_6e0627eebfa8 == o.fe158fc7_9d74_4329_87ba_6e0627eebfa8 &&
          _00eadba5_133b_4b1d_92fa_f6b73bdfa13b == o._00eadba5_133b_4b1d_92fa_f6b73bdfa13b &&
          ace6c7f6_03e6_4ea2_926e_40eefb54e2eb == o.ace6c7f6_03e6_4ea2_926e_40eefb54e2eb &&
          _922f281c_e1f8_485b_8708_026a6f5522c0 == o._922f281c_e1f8_485b_8708_026a6f5522c0 &&
          _318a3e7c_4523_44db_b925_e6e220aa68ed == o._318a3e7c_4523_44db_b925_e6e220aa68ed &&
          _9573e110_df5a_4534_b46b_da43dba5f5b8 == o._9573e110_df5a_4534_b46b_da43dba5f5b8 &&
          _567ba4c3_2529_4073_a988_736da057e9de == o._567ba4c3_2529_4073_a988_736da057e9de &&
          _1689ea85_2c23_44b0_83a5_ce056b0f9536 == o._1689ea85_2c23_44b0_83a5_ce056b0f9536 &&
          _3000c45b_4327_4c14_88a8_6dab38aeb240 == o._3000c45b_4327_4c14_88a8_6dab38aeb240 &&
          _4378d259_2102_489f_b29b_f7344ea237ee == o._4378d259_2102_489f_b29b_f7344ea237ee &&
          _57e6d9c6_228b_41bc_93cc_e06f9a53a7c4 == o._57e6d9c6_228b_41bc_93cc_e06f9a53a7c4 &&
          f6e1e73f_0b23_4a60_9b6b_24f0507f1c1e == o.f6e1e73f_0b23_4a60_9b6b_24f0507f1c1e &&
          _63800c77_c93c_4b7d_9f3c_80bc67bfcc44 == o._63800c77_c93c_4b7d_9f3c_80bc67bfcc44 &&
          _5aada2b6_58e4_4183_964b_c85655ea15b0 == o._5aada2b6_58e4_4183_964b_c85655ea15b0 &&
          _60710c0b_c685_41f5_9dd1_e785d63dc006 == o._60710c0b_c685_41f5_9dd1_e785d63dc006
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [_4a5f66e5_62df_47f1_a7c1_4292e7a3d59d, db9c3d9f_b363_4123_8437_b4f1743fbfbd, c1cbe65c_66e5_47b4_a56e_99dc3428675e, _42773615_9063_482e_a893_8dbb4f0061e6, ab4be51d_43a3_4591_acd0_98066d330d72, a1ed69b3_bfe4_49cb_a4e8_7dec63251fb9, _20c478fb_b505_4a34_9993_e178c1077637, _06cb9b63_b118_42ac_88bf_0a9285c4593b, _39130548_b2cc_49c1_be93_15be521a4a5d, _9471ad31_66f6_46da_ab2e_fc95bf2473bf, b90c1d87_2a4f_4f96_be4b_210a51565e7f, _73dd8ce1_3959_47fc_be81_5952d085e621, _1d2d15e3_2250_44f3_a82a_235cad85d61a, _426a987f_ce31_42a3_8392_327151c0be17, _1e5f332f_dbf5_4d12_8918_e7d4d1fa2a5a, ff9c2df3_689a_4505_a9d1_682b816cbbef, f81e551b_3651_4b1a_b328_5d7f80e3442a, bbc17609_9aba_4f8b_af24_a16fc0a1b678, _8cbca486_0d1b_4642_b230_e92be4766b67, _61e723b4_bfeb_453c_ba23_dcd53db8de9a, fe158fc7_9d74_4329_87ba_6e0627eebfa8, _00eadba5_133b_4b1d_92fa_f6b73bdfa13b, ace6c7f6_03e6_4ea2_926e_40eefb54e2eb, _922f281c_e1f8_485b_8708_026a6f5522c0, _318a3e7c_4523_44db_b925_e6e220aa68ed, _9573e110_df5a_4534_b46b_da43dba5f5b8, _567ba4c3_2529_4073_a988_736da057e9de, _1689ea85_2c23_44b0_83a5_ce056b0f9536, _3000c45b_4327_4c14_88a8_6dab38aeb240, _4378d259_2102_489f_b29b_f7344ea237ee, _57e6d9c6_228b_41bc_93cc_e06f9a53a7c4, f6e1e73f_0b23_4a60_9b6b_24f0507f1c1e, _63800c77_c93c_4b7d_9f3c_80bc67bfcc44, _5aada2b6_58e4_4183_964b_c85655ea15b0, _60710c0b_c685_41f5_9dd1_e785d63dc006].hash
    end

# Builds the object from hash
# @param [Hash] attributes Models attributes in the form of hash
# @return [Object] Returns the model itself
def self.build_from_hash(attributes)
  return nil unless attributes.is_a?(Hash)
  attributes = attributes.transform_keys(&:to_sym)
  transformed_hash = {}
  openapi_types.each_pair do |key, type|
    if attributes.key?(attribute_map[key]) && attributes[attribute_map[key]].nil?
      transformed_hash["#{key}"] = nil
    elsif type =~ /\AArray<(.*)>/i
      # check to ensure the input is an array given that the attribute
      # is documented as an array but the input is not
      if attributes[attribute_map[key]].is_a?(Array)
        transformed_hash["#{key}"] = attributes[attribute_map[key]].map { |v| _deserialize($1, v) }
      end
    elsif !attributes[attribute_map[key]].nil?
      transformed_hash["#{key}"] = _deserialize(type, attributes[attribute_map[key]])
    end
  end
  new(transformed_hash) # `new` will call the initialize method of the specific model class.
end

# Deserializes the data based on type
# @param string type Data type
# @param string value Value to be deserialized
# @return [Object] Deserialized data
def self._deserialize(type, value)
  case type.to_sym
  when :Time
    Time.parse(value)
  when :Date
    Date.parse(value)
  when :String
    value.to_s
  when :Integer
    value.to_i
  when :Float
    value.to_f
  when :Boolean
    if value.to_s =~ /\A(true|t|yes|y|1)\z/i
      true
    else
      false
    end
  when :Object
    # generic object (usually a Hash), return directly
    value
  when /\AArray<(?<inner_type>.+)>\z/
    inner_type = Regexp.last_match[:inner_type]
    value.map { |v| _deserialize(inner_type, v) }
  when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
    k_type = Regexp.last_match[:k_type]
    v_type = Regexp.last_match[:v_type]
    {}.tap do |hash|
      value.each do |k, v|
        hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
      end
    end
  else # model
    # models (e.g. Pet) or oneOf/anyOf constructs that resolve to a model name
    # MODIFIED: Ensure model is looked up in the Models namespace
    # 'type' here is expected to be the simple class name (e.g., "User", "OrderDetails")
    klass = Zitadel::Client::Models.const_get(type)
    # The `klass.build` method is for oneOf/anyOf types (defined in partial_oneof_module.mustache / partial_anyof_module.mustache)
    # The `klass.build_from_hash` is for regular model types (defined in this base_object.mustache itself)
    if klass.respond_to?(:openapi_one_of) || klass.respond_to?(:openapi_any_of) || klass.respond_to?(:openapi_allOf)
      klass.build(value) # For oneOf/anyOf/allOf, delegate to their specific build method
    else
      klass.build_from_hash(value) # For regular models
    end
  end
end

# Returns the string representation of the object
# @return [String] String presentation of the object
def to_s
  to_hash.to_s
end

# to_body is an alias to to_hash (backward compatibility)
# @return [Hash] Returns the object in the form of hash
def to_body
  to_hash
end

# Returns the object in the form of hash
# @return [Hash] Returns the object in the form of hash
def to_hash
  hash = {} # Calls super.to_hash if parent exists
  self.class.attribute_map.each_pair do |attr, param|
    value = self.send(attr)
    if value.nil?
      is_nullable = self.class.openapi_nullable.include?(attr)
      next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
    end

    hash[param] = _to_hash(value)
  end
  hash
end

# Outputs non-array value in the form of hash
# For object, use to_hash. Otherwise, just return the value
# @param [Object] value Any valid value
# @return [Hash] Returns the value in the form of hash
def _to_hash(value)
  if value.is_a?(Array)
    value.compact.map { |v| _to_hash(v) }
  elsif value.is_a?(Hash)
    {}.tap do |hash|
      value.each { |k, v| hash[k] = _to_hash(v) }
    end
  elsif value.respond_to? :to_hash
    value.to_hash
  else
    value
  end
end

  end

end
