=begin
#Zitadel SDK

#The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'date'
require 'time'

module ZitadelClient
  module Models # Added Models module
          class UserServiceUserFieldName
    USER_FIELD_NAME_UNSPECIFIED = "USER_FIELD_NAME_UNSPECIFIED".freeze
    USER_FIELD_NAME_USER_NAME = "USER_FIELD_NAME_USER_NAME".freeze
    USER_FIELD_NAME_FIRST_NAME = "USER_FIELD_NAME_FIRST_NAME".freeze
    USER_FIELD_NAME_LAST_NAME = "USER_FIELD_NAME_LAST_NAME".freeze
    USER_FIELD_NAME_NICK_NAME = "USER_FIELD_NAME_NICK_NAME".freeze
    USER_FIELD_NAME_DISPLAY_NAME = "USER_FIELD_NAME_DISPLAY_NAME".freeze
    USER_FIELD_NAME_EMAIL = "USER_FIELD_NAME_EMAIL".freeze
    USER_FIELD_NAME_STATE = "USER_FIELD_NAME_STATE".freeze
    USER_FIELD_NAME_TYPE = "USER_FIELD_NAME_TYPE".freeze
    USER_FIELD_NAME_CREATION_DATE = "USER_FIELD_NAME_CREATION_DATE".freeze

    def self.all_vars
      @all_vars ||= [USER_FIELD_NAME_UNSPECIFIED, USER_FIELD_NAME_USER_NAME, USER_FIELD_NAME_FIRST_NAME, USER_FIELD_NAME_LAST_NAME, USER_FIELD_NAME_NICK_NAME, USER_FIELD_NAME_DISPLAY_NAME, USER_FIELD_NAME_EMAIL, USER_FIELD_NAME_STATE, USER_FIELD_NAME_TYPE, USER_FIELD_NAME_CREATION_DATE].freeze
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      return value if UserServiceUserFieldName.all_vars.include?(value)
      raise "Invalid ENUM value #{value} for class #ZitadelClient::Models::UserServiceUserFieldName"
    end
  end

  end
end
