class WebTokenAuthenticator
  @jwt_algorithm: String
  @jwt_audience: String
  @jwt_issuer: String
  @jwt_lifetime: Integer
  @jwt_subject: String
  @private_key: String

  def self.builder: (String, String, String) -> WebTokenAuthenticatorBuilder

  def get_grant: (OAuth2::Client, String) -> OAuth2::AccessToken

  def initialize: (OpenId, Set[String], String, String, String, String, ?Integer jwt_lifetime, ?String jwt_algorithm) -> untyped

  class WebTokenAuthenticatorBuilder
    @jwt_audience: String
    @jwt_issuer: String
    @jwt_lifetime: Integer
    @jwt_subject: String
    @private_key: String

    def initialize: (String, String, String, String, String) -> void

    def build: -> WebTokenAuthenticator

    def token_lifetime_seconds: -> self
  end
end
