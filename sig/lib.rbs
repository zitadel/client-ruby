module Zitadel

  module Client

    VERSION: String

    module Models

    end

    module Utils
      class UrlUtil

        def self.build_hostname: (String) -> String
      end
    end

    module Api
      class FeatureServiceApi
        def initialize: (ApiClient) -> void
      end

      class IdentityProviderServiceApi
        def initialize: (ApiClient) -> void
      end

      class OIDCServiceApi
        def initialize: (ApiClient) -> void
      end

      class OrganizationServiceApi
        def initialize: (ApiClient) -> void
      end

      class SessionServiceApi
        def initialize: (ApiClient) -> void
      end

      class SettingsServiceApi
        def initialize: (ApiClient) -> void
      end

      class UserServiceApi
        def initialize: (ApiClient) -> void
      end

      class WebKeyServiceApi
        def initialize: (ApiClient) -> void
      end

      class SAMLServiceApi
        def initialize: (ApiClient) -> void
      end

      # Beta Service APIs
      class BetaProjectServiceApi
        def initialize: (ApiClient) -> void
      end

      class BetaAppServiceApi
        def initialize: (ApiClient) -> void
      end

      class BetaOIDCServiceApi
        def initialize: (ApiClient) -> void
      end

      class BetaUserServiceApi
        def initialize: (ApiClient) -> void
      end

      class BetaOrganizationServiceApi
        def initialize: (ApiClient) -> void
      end

      class BetaSettingsServiceApi
        def initialize: (ApiClient) -> void
      end

      class BetaInternalPermissionServiceApi
        def initialize: (ApiClient) -> void
      end

      class BetaAuthorizationServiceApi
        def initialize: (ApiClient) -> void
      end

      class BetaSessionServiceApi
        def initialize: (ApiClient) -> void
      end

      class BetaInstanceServiceApi
        def initialize: (ApiClient) -> void
      end

      class BetaTelemetryServiceApi
        def initialize: (ApiClient) -> void
      end

      class BetaFeatureServiceApi
        def initialize: (ApiClient) -> void
      end

      class BetaWebKeyServiceApi
        def initialize: (ApiClient) -> void
      end

      class BetaActionServiceApi
        def initialize: (ApiClient) -> void
      end
    end

    class Configuration
      attr_reader authenticator: Auth::Authenticator

      def initialize: (Auth::Authenticator authenticator, ?Integer timeout, ?Integer connect_timeout) -> void

      def self.my_user_agent: () -> String

      def access_token: () -> String

      def host: () -> String

      def user_agent: () -> String

      def connect_timeout: () -> Integer

      def timeout: () -> Integer

      def configure: () { (Configuration) -> void } -> void
    end

    class ApiClient

      @config: Configuration
      @default_headers: Hash[String, String]
      @user_agent: String

      attr_accessor config: Configuration

      attr_accessor default_headers: Hash[String, String]

      def initialize: (Configuration) -> void

      def self.default: () -> untyped

      def call_api: (untyped http_method, untyped path, ?::Hash[untyped, untyped] opts) -> ::Array[untyped]

      def build_request: (Symbol http_method, String path, Hash[Symbol, untyped] opts) -> Typhoeus::Request

      def build_request_body: (untyped header_params, untyped form_params, untyped body) -> untyped

      def download_file: (untyped request) ?{ (untyped) -> untyped } -> untyped

      def ensure_tempfile: (::Tempfile?) -> ::Tempfile

      def json_mime?: (untyped mime) -> untyped

      def deserialize: (untyped response, untyped return_type) -> (nil | untyped)

      def convert_to_type: (untyped data, untyped return_type) -> (nil | untyped)

      def sanitize_filename: (untyped filename) -> untyped

      def select_header_accept: (untyped accepts) -> (nil | untyped)

      def select_header_content_type: (untyped content_types) -> (nil | untyped)

      def object_to_http_body: (untyped model) -> untyped

      def object_to_hash: (untyped obj) -> untyped

      def build_collection_param: (untyped param, untyped collection_format) -> untyped
    end

    class ZitadelError < StandardError
      def initialize: (String) -> void
    end

    #
    # Represents an HTTP error returned from the Zitadel API.
    #
    # This class captures the HTTP status code, headers, and body,
    # and provides a helpful string representation for debugging.
    #
    class ApiError < ZitadelError
      attr_reader code: Integer
      attr_reader response_headers: Hash[String, Array[String]]
      attr_reader response_body: (String | Object)?

      def initialize: (Integer, Hash[String, Array[String]], (String | Object)?) -> void
    end

    module Auth

      class Authenticator

        @host: String

        @auth_token: String

        attr_reader host: String

        def initialize: (String) -> void

        def auth_headers: () -> Hash[String, String]

        def auth_token: () -> String

      end

      class ClientCredentialsAuthenticator < OAuthAuthenticator

        def initialize: (OpenId, String, String, Set[String]) -> void

        def get_grant: (OAuth2::Client, String) -> OAuth2::AccessToken

        def self.builder: (String, String, String) -> ClientCredentialsAuthenticatorBuilder

        class ClientCredentialsAuthenticatorBuilder < OAuthAuthenticatorBuilder
          @client_id: String
          @client_secret: String

          def initialize: (String, String, String) -> void

          def build: -> ClientCredentialsAuthenticator
        end

      end

      class NoAuthAuthenticator < Authenticator

        @token: String

        def initialize: (?String, ?String) -> void

        def auth_headers: () -> Hash[String, String]
      end

      class OAuthAuthenticatorBuilder
        @auth_scopes: Set[String]
        @open_id: OpenId

        attr_reader open_id: OpenId
        attr_reader auth_scopes: Set[String]

        def initialize: (String) -> void

        def scopes: (*String) -> self
      end

      class OAuthAuthenticator < Authenticator
        @auth_session: OAuth2::Client
        @mutex: Thread::Mutex
        @open_id: OpenId
        @token: OAuth2::AccessToken
        @auth_scopes: String

        def initialize: (OpenId, Set[String], OAuth2::Client) -> void

        def auth_token: () -> String

        def auth_headers: () -> Hash[String, String]

        def get_grant: (OAuth2::Client, String) -> OAuth2::AccessToken

        def refresh_token: () -> OAuth2::AccessToken
      end

      class OpenId
        @host_endpoint: String
        @token_endpoint: String

        attr_accessor host_endpoint: String
        attr_accessor token_endpoint: String

        def initialize: (String) -> void

        def self.build_well_known_url: (String) -> String
      end

      class PersonalAccessTokenAuthenticator < Authenticator
        @token: String

        def initialize: (String, String) -> void

        def auth_headers: -> Hash[String, String]
      end

      class WebTokenAuthenticator < OAuthAuthenticator
        @jwt_algorithm: String
        @jwt_audience: String
        @jwt_issuer: String
        @jwt_lifetime: Integer
        @jwt_subject: String
        @key_id: String?
        @private_key: OpenSSL::PKey::RSA

        def self.builder: (String, String, String) -> WebTokenAuthenticatorBuilder

        def self.from_json: (String, String) -> WebTokenAuthenticator

        def get_grant: (OAuth2::Client, String) -> OAuth2::AccessToken

        def initialize: (OpenId, Set[String], String, String, String, (String | OpenSSL::PKey::PKey), ?jwt_lifetime: Integer, ?jwt_algorithm: String, ?key_id: String?) -> void

        class WebTokenAuthenticatorBuilder < OAuthAuthenticatorBuilder
          @jwt_audience: String
          @jwt_issuer: String
          @jwt_lifetime: Integer
          @jwt_subject: String
          @key_id: String
          @private_key: String

          def initialize: (String, String, String, String, String) -> void

          def build: -> WebTokenAuthenticator

          def key_identifier: (String) -> self

          def token_lifetime_seconds: (Integer) -> self
        end
      end
    end

    class Zitadel

      def self.with_access_token: (String, String) -> Zitadel

      def self.with_client_credentials: (String, String, String) -> Zitadel

      def self.with_private_key: (String, String) -> Zitadel

      attr_reader configuration: Configuration
      attr_reader features: Api::FeatureServiceApi
      attr_reader idps: Api::IdentityProviderServiceApi
      attr_reader oidc: Api::OIDCServiceApi
      attr_reader organizations: Api::OrganizationServiceApi
      attr_reader saml: Api::SAMLServiceApi
      attr_reader sessions: Api::SessionServiceApi
      attr_reader settings: Api::SettingsServiceApi
      attr_reader users: Api::UserServiceApi
      attr_reader webkeys: Api::WebKeyServiceApi
      attr_reader beta_projects: Api::BetaProjectServiceApi
      attr_reader beta_apps: Api::BetaAppServiceApi
      attr_reader beta_oidc: Api::BetaOIDCServiceApi
      attr_reader beta_users: Api::BetaUserServiceApi
      attr_reader beta_organizations: Api::BetaOrganizationServiceApi
      attr_reader beta_settings: Api::BetaSettingsServiceApi
      attr_reader beta_permissions: Api::BetaInternalPermissionServiceApi
      attr_reader beta_authorizations: Api::BetaAuthorizationServiceApi
      attr_reader beta_sessions: Api::BetaSessionServiceApi
      attr_reader beta_instance: Api::BetaInstanceServiceApi
      attr_reader beta_telemetry: Api::BetaTelemetryServiceApi
      attr_reader beta_features: Api::BetaFeatureServiceApi
      attr_reader beta_webkeys: Api::BetaWebKeyServiceApi
      attr_reader beta_actions: Api::BetaActionServiceApi

      def initialize: (Auth::Authenticator) ?{ (Configuration) -> void } -> void

    end

    class ObjectSerializer

      def initialize: () -> void

      def serialize: (untyped object) -> String

      def deserialize: [T] (String data, T klass) -> T

      private

      def convert_to_type: (untyped data, (::Class | String) return_type) -> (untyped | nil)

      def object_to_hash: (untyped obj) -> untyped
    end

    interface _IApiClient
      def invoke_api: [T] (
          operation_id: String,
          path_template: String,
          method: String,
          path_params: Hash[String | Symbol, untyped],
          query_params: Hash[String | Symbol, untyped],
          header_params: Hash[String | Symbol, untyped],
          ?body: untyped,
          ?success_type: T?,
          ?error_types: Hash[Integer | String, ::Class]?
        ) -> T?
    end

    class IApiClient
      def invoke_api: [T] (
          operation_id: String,
          path_template: String,
          method: String,
          path_params: Hash[String | Symbol, untyped],
          query_params: Hash[String | Symbol, untyped],
          header_params: Hash[String | Symbol, untyped],
          ?body: untyped,
          ?success_type: T?,
          ?error_types: Hash[Integer | String, ::Class]?
        ) -> T?
    end

    class DefaultApiClient
      include _IApiClient

      VALID_METHODS: Array[Symbol]

      @config: Configuration
      @serde: ObjectSerializer

      def initialize: (Configuration config) -> void

      def invoke_api: [T] (
          operation_id: String,
          path_template: String,
          method: String,
          path_params: Hash[String | Symbol, untyped],
          query_params: Hash[String | Symbol, untyped],
          header_params: Hash[String | Symbol, untyped],
          ?body: untyped,
          ?success_type: T?,
          ?error_types: Hash[Integer | String, ::Class]?
        ) -> T?

      private

      def find_error_type: (Integer status_code, Hash[Integer | String, ::Class]? error_types) -> ::Class?

      def build_path: (String path_template, Hash[String | Symbol, untyped] path_params) -> String
    end

  end
end
