module OAuth2
  class AccessToken

  end

  class Client
    def initialize: (String | nil, String | nil, Hash[Symbol, String]) -> void

    def fetch_token: (url: String, **untyped) -> AccessToken
  end
end

class OAuthAuthenticator < Authenticator
  @auth_session: OAuth2::Client
  @open_id: OpenId
  @token: OAuth2::AccessToken | nil
  @auth_scopes: String

  def initialize: (OpenId, Set[String], OAuth2::Client) -> void

  def get_auth_token: () -> String

  def get_auth_headers: () -> Hash[String, String]

  def get_grant: (OAuth2::Client, String) -> OAuth2::AccessToken

  def refresh_token: () -> OAuth2::AccessToken
end
